#!/usr/bin/perl
############################################################################
use lib '/var/www/okmis/src/lib';
use DBI;
use myForm;
use myDBI;
use myConfig;
use myLogin;
use Cwd;

############################################################################
# usage: Pro835
#   processes the 835 Remittance files.
############################################################################
my $form = myForm->new();
my $dbh  = myDBI->dbconnect( $form->{'DBNAME'} );

my $debug = 0;
if ($debug) {
    foreach my $f ( sort keys %{$form} ) {
        print "Pro835: form-$f=$form->{$f}\n";
    }
}

my $LOGINID     = $form->{'LOGINID'};
my $LOGINUSERID = $form->{'LOGINUSERID'};
my $mlt         = $form->{'mlt'};
my $type        = $form->{'type'};

unless ( SysAccess->chkPriv( $form, 'Agent' ) ) {
    myDBI->error("Access Denied! (Process 835 Electronic Files)");
}

# get the command name...
my ( $pw, $cmd ) = $0 =~ m/(.*\/)(.*)$/;

# setup the configuration...
my $SRCBIN   = myConfig->cfg('SRCBIN');
my $ADMINDIR = myConfig->cfg('ADMINDIR');
my $dirpath  = qq|${ADMINDIR}/835|;

############################################################################
print qq|${cmd} Started: | . localtime() . qq|\n\n|;
print qq|======================================\n\n|;
if ( chdir($dirpath) ) {
    my $pwd = cwd();
    print qq|Pro835: pwd=${pwd}\n| if ($debug);

    print qq|\n--------------------------------------\n|;
    print qq|\n  Check 835 files...\n|;
    system("${SRCBIN}/rename");

    print qq|\n--------------------------------------\n|;
    print qq|\n  First Process FTP to expand file...\n|;
    system(
"${SRCBIN}/ProFTP DBNAME=$form->{'DBNAME'}\\&type=835\\&mlt=${mlt}\\&debug=${debug}"
    );

    print qq|\n--------------------------------------\n|;
    print qq|\n  Next RENAME OLD files...\n|;
    system("${SRCBIN}/renameDB");

    print qq|\n--------------------------------------\n|;
    print qq|\n  Next Process 835 files...\n|;
    my $cnt   = 0;
    my $setup = ();
    my @Files = glob("*.835");
    foreach $file (@Files) {
        $cnt++;
        print qq|\n--------------------------------------\n|;
        print qq|\n  Process file: ${file}\n|;

        my ( $dbname, $npi, $ins, $dt, $stamp, $sfx ) = split( '\.', $file );
        print qq|dbname=${dbname}\n| if ($debug);
        print qq|npi=${npi}\n|       if ($debug);
        print qq|ins=${ins}\n|       if ($debug);
        print qq|dt=${dt}\n|         if ($debug);
        print qq|stamp=${stamp}\n|   if ($debug);
        print qq|sfx=${sfx}\n|       if ($debug);

        # set the login for this dbname...simulate '91:root'
        #   otherwise we'd have to create '89:admin' for all DBs
        ##myLogin->SysAdmin($dbname,$mlt,$LOGINUSERID,$LOGINID);
        myLogin->SysAdmin( $dbname, $mlt, '91', 'root' );

        # setup this DB for reporting ...
        if ( !$setup->{$dbname} ) {
            print qq|\n  Setup ${dbname}...\n|;
            $setup->{$dbname} = $dbname;
        }

        print qq|\n|;
        ##print qq|system("${SRCBIN}/pro835 DBNAME=${dbname}\\&filepath=${file}\\&mlt=${mlt}\\&debug=${debug}");\n|;
        system(
"${SRCBIN}/pro835 DBNAME=${dbname}\\&filepath=${file}\\&mlt=${mlt}\\&debug=${debug}"
        );
    }
    print qq|\n\n${cnt} files processed.\n|;

    print qq|\nCheck reconcile/mark/reporting for databases processed...\n|;
    foreach my $dbname ( sort keys %{$setup} ) {

        # set the login for this dbname...may have expired?
        myLogin->SysAdmin( $dbname, $mlt, '91', 'root' );

        print qq|\n--------------------------------------\n|;
        print qq|  Reconcile Health Home notes: ${dbname}...\n|;
        ##print qq|system("${SRCBIN}/recHealthHome DBNAME=${dbname}\\&mlt=${mlt}\\&debug=${debug}");\n|;
        system(
"${SRCBIN}/recHealthHome DBNAME=${dbname}\\&mlt=${mlt}\\&debug=${debug}"
        );

        print qq|  Mark Notes Paid: ${dbname}...\n|;
        ##print qq|system("${SRCBIN}/markNotePaid DBNAME=${dbname}\\&mlt=${mlt}\\&debug=${debug}");\n|;
        system(
"${SRCBIN}/markNotePaid DBNAME=${dbname}\\&mlt=${mlt}\\&debug=${debug}"
        );

        print qq|  Generate PayReminder emails: ${dbname}...\n|;
        ##print qq|system("${SRCBIN}/GenProviderReport DBNAME=${dbname}\\&name=PayReminder\\&mlt=${mlt}\\&debug=${debug}");\n|;
        system(
"${SRCBIN}/GenProviderReport DBNAME=${dbname}\\&name=PayReminder\\&mlt=${mlt}\\&debug=${debug}"
        );
    }
}
else { print "Can't chdir to ${dirpath} $!"; }
print qq|\n--------------------------------------\n|;
print qq|\n\n======================================\n|;
print qq|${cmd} Completed: | . localtime() . qq|\n|;

myDBI->cleanup();
exit;
############################################################################
