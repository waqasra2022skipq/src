#!/usr/bin/perl
############################################################################
use lib 'C:/xampp/htdocs/src/lib';
use DBI;
use myForm;
use myDBI;
use DBA;

############################################################################
# this routine is used to mark the Note as Paid to the Provider
#  so the note WON'T show up on Payroll
#  not mulitple NoteTrans so mark ALL NoteTrans as Paid
#  select for NoteTrans.RecDate not Needed because Treatment.RecDate is set when 1st NoteTrans.RecDate is set
#   - and NoteTrans.RecDate is not null
############################################################################
my $form  = myForm->new();
my $dbh   = myDBI->dbconnect( $form->{'DBNAME'} );
my $debug = $form->{'debug'};

if ($debug) {
    foreach my $f ( sort keys %{$form} ) {
        print qq|markNotePaid form: $f=$form->{$f}\n|;
    }
}

print qq|ENTER: markNotePaid, DBNAME=$form->{'DBNAME'}\n| if ($debug);

my $cnt = 0;
print qq|\nmarkNotePaid Started: | . localtime() . qq|\n|;

exit if ( $debug == 2 );

my $PaidDate  = $form->{'TODAY'};
my $sMarkNote = $dbh->prepare(
    "update Treatment set PaidDate=? where TrID=? and PaidDate is null");
my $sMarkPaid = $dbh->prepare(
    "update NotePaid set PaidDate=? where TrID=? and PaidDate is null");
my $sMarkTran = $dbh->prepare(
    "update NoteTrans set PaidDate=? where TrID=? and PaidDate is null");

my $sTreatment = $dbh->prepare( "
select Treatment.TrID,Treatment.ClientID,Treatment.ProvID,Treatment.ContLogDate,Treatment.BillStatus
      ,xSC.InsID,xSC.SCNum
 from Treatment 
  left join xSC on xSC.SCID=Treatment.SCID
 where Treatment.RecDate is not null and Treatment.PaidDate is null
   and xSC.InsID=100 && xSC.SCNum LIKE 'G9%'
 order by Treatment.ProvID,Treatment.ContLogDate,Treatment.BillStatus
" );
$sTreatment->execute() || myDBI->dberror("markNote: select Treatment");
while ( my $rTreatment = $sTreatment->fetchrow_hashref ) {
    my $TrID       = $rTreatment->{'TrID'};
    my $ClientID   = $rTreatment->{'ClientID'};
    my $ProvID     = $rTreatment->{'ProvID'};
    my $ContDate   = $rTreatment->{'ContLogDate'};
    my $BillStatus = $rTreatment->{'BillStatus'};
    print qq|mark: ${TrID}/${ClientID}/${ProvID}/${ContDate}/${BillStatus}\n|;
    $sMarkNote->execute( $PaidDate, $TrID )
      || myDBI->dberror("update Treatment: ${TrID}");
    $sMarkPaid->execute( $PaidDate, $TrID )
      || myDBI->dberror("update NotePaid: ${TrID}");
    $sMarkTran->execute( $PaidDate, $TrID )
      || myDBI->dberror("update NoteTrans: ${TrID}");
    $cnt++;
}
$sTreatment->finish();
$sMarkNote->finish();
$sMarkPaid->finish();
$sMarkTran->finish();

myDBI->cleanup();
print qq|count=${cnt}\n|;
print qq|markNotePaid Completed: | . localtime() . qq|\n\n|;
exit;
############################################################################
