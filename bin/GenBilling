#!/usr/bin/perl
use lib '/home/okmis/mis/src/lib';
use Accounts;
use myConfig;
use myForm;
use myDBI;
use Cwd;
############################################################################
# usage: command                    for all accounts
#    or: command mark               mark billing for weekly run
#    or: command acct1 acct2...     to run for 'acct1' 'acct2' ...
#    or: command mark acct1 acct2...to mark for 'acct1' 'acct2' ...
############################################################################
my $form;
# get the command name...
my ($pw,$cmd) = $0 =~ m/(.*\/)(.*)$/;
# Mark?
my $Mark = 0; if ( $ARGV[0] eq 'mark' ) { $Mark = 1; shift; }
# the databases to work with
my @DBS = $ARGV[0] eq 'test' ? Accounts->dbs('test') : scalar(@ARGV) ? @ARGV : Accounts->dbs('active'); 
my $BILLDIR = myConfig->cfg('BILLDIR');
my $BIN = myConfig->cfg('BIN');

############################################################################
print qq|${cmd} Started: |.localtime().qq|\n\n|;
print qq|======================================\n\n|;
print qq|Mark=${Mark}\n|;
print qq|DBS=@DBS\n|;

# remove the billing files from last week...
chdir($BILLDIR);
my @delfiles = glob("*.837 *.837.out *.837.txt");
print qq|\nRemove OLD Billing files: | . @delfiles . qq|...\n|;
unlink(@delfiles);

foreach my $dbname ( @DBS )
{
  my $pwd=cwd();
  print qq|\n--------------------------------------\n|;
  print qq|database: ${dbname} pwd=${pwd}\n|;

  system("${BIN}/genBilling DBNAME=${dbname}\\&Mark=${Mark}");
  next unless ( $Mark );

  print qq|\n    Set Addons ...\n|;
  system("${BIN}/setAddon DBNAME=${dbname}");

  print qq|\n    Set Billing ...\n|;
  system("${BIN}/setBilling DBNAME=${dbname}");

  $form = myForm->new("DBNAME=$dbname");
  my $dbh = myDBI->dbconnect($form->{'DBNAME'});
  my $sInsContracts = $dbh->prepare("select xInsurance.Descr from Contracts left join xInsurance on xInsurance.ID=Contracts.InsID where Contracts.BillFlag=1 and Contracts.BillType='EL' group by xInsurance.Descr");
  $sInsContracts->execute();
  while ( my $rInsContracts = $sInsContracts->fetchrow_hashref )
  {
    print qq|\n    generate $rInsContracts->{Descr} '837'...\n|;
    system("${BIN}/gen837 DBNAME=${dbname}\\&InsDescr=$rInsContracts->{Descr}");
  }
  $sInsContracts->finish();
  myDBI->cleanup();

  print qq|\n    generate JOLTS '837'\n|;
  system("${BIN}/genJOLTS DBNAME=${dbname}");
# not done anymore...
#  print qq|\n    generate Notes...\n|;
#  system("${BIN}/ClinicNotes DBNAME=${dbname}\\&Type=progress");
  print qq|\n    generate HCFAs...\n|;
  system("${BIN}/ClinicHCFA DBNAME=${dbname}");
}

system("${BIN}/SendBilling");
myDBI->cleanup();

print qq|\n\n======================================\n|;
print qq|${cmd} Completed: |.localtime().qq|\n|;
exit;
############################################################################
