#!/usr/bin/perl
use lib '/home/okmis/mis/src/lib';
use DBI;
use myForm;
use DBA;
use myDBI;
use File::stat;
my $t = chr(253).'100'.chr(253).'107'.chr(253).'110'.chr(253).'111'.chr(253).'112'.chr(253).'113'.chr(253).'114'.chr(253).'115';
print $t;
exit;
my $filename = 'tst';
    my $sb = stat($filename);
    printf "File is %s, size is %s, perm %04o, mtime %s\n",
           $filename, $sb->size, $sb->mode & 07777,
           scalar localtime $sb->mtime;
exit;

my $form = myForm->new();
warn qq|ENTER: tst\n|;
if ( $form->{'token'} )
{
  my $token = DBUtil->genToken(12);
  warn qq|token: ${token}\n|;
  exit;
}

warn qq|FileName: $form->{f}\n|;
my $FileName = main->setFILENAME($form->{'f'});
#$FileName=qq|./55371/20170928084319_Dean, Anna(reads lips)(VPA level)&#9989;.pdf|;
#warn qq|FileName: ${FileName}\n|;
warn qq|FileName: ${FileName}\n|;
exit;

my $size =  keys(%{$form});
warn qq|size: ${size}\n|;
foreach my $f ( sort keys %{$form} ) { warn qq|form: $f=$form->{$f}\n|; }
myDBI->dberror("HTLP TEST");
myDBI->cleanup();
exit;

my $rptfile = '/home/okmis/kls.rsp';
my ($directory,$filename) = $rptfile =~ m/(.*\/)(.*)$/;
warn qq|directory=${directory}\n|;
warn qq|filename=${filename}\n|;
exit;

my $table = 'PDDom';
  foreach my $table ( $form->getDetTables($table) )
  { print qq|1: table=${table}\n|; }
  foreach my $table ( myDBI->getDetTables($table) )
  { print qq|2: table=${table}\n|; }
  if ( $form->getDetTables($table) )
  { print qq|1: YES\n|; } else { print qq|1: NO\n|; }
  if ( myDBI->getDetTables($table) )
  { print qq|2: YES\n|; } else { print qq|2: NO\n|; }
exit;

my $v2 = myDBI->getTableConfig('Insurance','HEADERTABLE');
print qq|v1=${v1}, v2=${v2}\n|;
exit;

sub setFILENAME
{
  my ($self,$inNAME) = @_;
  my $outNAME = $inNAME;
  $outNAME =~ s/\#//g;              # bad char
  $outNAME =~ s/\&//g;              # bad char
  $outNAME =~ s/\r//g;              # carriage return
  $outNAME =~ s/\n//g;              # new line
  $outNAME =~ s/\t//g;              # tab to space
  $outNAME =~ s/^M//g;              # new line
  $outNAME =~ s/ /_/g;              # space
  $outNAME =~ s/\,/_/g;             # bad char
  $outNAME =~ s/\;/_/g;             # bad char
  return($outNAME);
}
