#!/usr/bin/perl
use lib '/home/okmis/mis/src/lib';
use DBI;
use myForm;
use myDBI;
use DBA;
use DBUtil;
use Time::Local;
my $DT = localtime();
############################################################################
# usage:
#   MIPSr
############################################################################
my $form = myForm->new();
my $dbh = myDBI->dbconnect($form->{'DBNAME'});
my $debug = $form->{'LOGINPROVID'} == 91 ? 0 : 0;
if ( $debug ) { foreach my $f ( sort keys %{$form} ) { print "form-$f=$form->{$f}\n"; } }
my $QID = $form->{'Type'};
$form->{'FromDate'} = '2019-01-01';
$form->{'ToDate'} = '2019-12-31';
$form = DBUtil->setDates($form);
my $DateRange = qq|from $form->{FromDateD} thru $form->{ToDateD}|;

my $multidel = 'Ã½';
my $ForProvID = $form->{ForProvID} ? $form->{ForProvID} : $form->{LOGINPROVID};
# join xInsurance needed for withSelection
my $withSelection = DBA->withSelection($form,'and','Treatment.ClinicID','Treatment.ProvID','Treatment.ClientID','Treatment.TrID');
my $Header = DBA->withSelectionHeader($form);
print qq|Header: ${Header}\n| if ( $debug );
$withSelection .= qq| and Client.Active=1| if ( $form->{Active} );
  my @FLDS = ('ClinicName:ClinicName','LName:LastName','FName:FirstName','ClientID:ClientID','DOB:DateOfBirth','Age:Age','Race:Race','PrimaryProvider:PrimaryProvider','TrID:TrID','SCNum:SCNum','ProvRevStatus:Reviewed','BillStatusDescr:BillStatus');
#@FLDS = ('TrID:TrID');
  my $numFLDS = scalar(@FLDS)-2;
print qq|numFLDS=${numFLDS}\n| if ( $debug );
  my $qrecord = qq|
select Treatment.TrID,Treatment.ContLogDate,Treatment.ClinicID,xSC.SCNum
      ,xBillStatus.Descr as BillStatusDescr, Treatment.RevStatus
      ,Client.LName,Client.FName,Client.ClientID
      ,Clinic.Name as ClinicName
      ,CONCAT(Counselor.LName,', ',Counselor.FName) as PrimaryProvider
      ,Client.DOB,TIMESTAMPDIFF(YEAR, Client.DOB, CURDATE()) AS Age
      ,xRaces.Descr as Race
 from Treatment 
  left join Client on Client.ClientID=Treatment.ClientID
  left join Provider as Clinic on Clinic.ProvID=Client.clinicClinicID
  left join Provider as Counselor on Counselor.ProvID=Client.ProvID
  left join okmis_config.xRaces on xRaces.ID=SUBSTRING_INDEX(Client.Race,'${multidel}',1)
  left join xSC on xSC.SCID=Treatment.SCID
  left join xBillStatus on xBillStatus.ID=Treatment.BillStatus
  left join xInsurance on xInsurance.ID=xSC.InsID
 where xSC.SCNum LIKE 'G%'          # GCodes
   and (Treatment.ContLogDate >= '$form->{FromDate}' and Treatment.ContLogDate<='$form->{ToDate}')
   and Treatment.BillStatus=0
  ${withSelection}
 order by Client.LName,Client.FName,Client.ClientID
|;
print qq|qrecord=\n${qrecord}\n| if ( $debug );
my $rowcnt = 0;
my $totals = ();
print qq|${DT}\nGCodes Entered ${DateRange} ${Header}\n|;
foreach my $f ( @FLDS ) { my ($fld,$hdr) = split(':',$f); print qq|${hdr}\t|; }
print qq|\n|;
my $srecord = $dbh->prepare($qrecord);
$srecord->execute();
#my $rows = $srecord->rows; print qq|rows=${rows}\n|;
while (my $rrecord = $srecord->fetchrow_hashref)
{ 
  $rowcnt++;
  if ( $rrecord->{RevStatus} == 0 )
  { $rrecord->{'ProvRevStatus'} = qq|Provider approval needed.| }
  elsif ( $rrecord->{RevStatus} == 1 )
  { $rrecord->{'ProvRevStatus'} = qq|Provider approval of Manager changes needed.| }
  elsif ( $rrecord->{RevStatus} == 2 )
  { $rrecord->{'ProvRevStatus'} = qq|Manager review/approval needed.| }
  elsif ( $rrecord->{RevStatus} == 3 )
  { $rrecord->{'ProvRevStatus'} = qq|Note approved for billing.| }
  foreach my $f ( @FLDS ) { my ($fld,$hdr) = split(':',$f); print qq|$rrecord->{$fld}\t|; }
  print qq|\n|;
}
foreach my $f ( @FLDS ) { print qq|${rowcnt}\t|; $rowcnt=''; }
print qq|\n|;
$srecord->finish();

myDBI->cleanup();
exit;
############################################################################
