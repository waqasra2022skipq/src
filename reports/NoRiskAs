#!/usr/bin/perl
use lib '/home/okmis/mis/src/lib';
use DBI;
use myForm;
use myDBI;
use DBA;
use DBUtil;
use Time::Local;
my $DT = localtime();
############################################################################
# usage:
#   NoRiskAs ForProvID=id
############################################################################
my $form = myForm->new();
my $dbh = myDBI->dbconnect($form->{'DBNAME'});
#foreach my $f ( sort keys %{$form} ) { warn "form-$f=$form->{$f}\n"; }

my $ForProvID = $form->{ForProvID} ? $form->{ForProvID} : $form->{LOGINPROVID};
# join xInsurance needed for withSelection
my $ClinicSelection = DBA->withSelection($form,'and','Client.clinicClinicID','','','');
my $Header = DBA->withSelectionHeader($form);
$ClinicSelection .= qq| and Client.Active=1| if ( $form->{Active} );
my $sProvider = $dbh->prepare("select LName, FName from Provider where ProvID=?");
my $qClient = qq"
select Client.LName, Client.FName, Client.ClientID, Client.DOB, Client.ProvID, Client.Active
      ,ClientRiskAssessment.VisitDate
      ,truncate((to_days(curdate()) - to_days(Client.DOB)) / 365,0) as Age
  from Client 
    left join ClientACL on ClientACL.ClientID=Client.ClientID
    left join ClientRiskAssessment on ClientRiskAssessment.ClientID=Client.ClientID
    left join ClientPrAuth on ClientPrAuth.ClientID=Client.ClientID
    left join ClientPrAuthCDC on ClientPrAuthCDC.ClientPrAuthID=ClientPrAuth.ID
    left join Insurance on Insurance.InsNumID=ClientPrAuth.InsuranceID
    left join xInsurance on xInsurance.ID=Insurance.InsID
  where ClientACL.ProvID='${ForProvID}'
    and ClientRiskAssessment.VisitDate is null 
    and (
          ClientPrAuth.PAnumber is not null
          and curdate() between ClientPrAuth.EffDate and ClientPrAuth.ExpDate
        )
    and (ClientPrAuthCDC.TransType=23 || ClientPrAuthCDC.TransType=42)
  ${ClinicSelection}
  group by Client.LName, Client.FName, Client.ClientID";
#    and truncate((to_days(curdate()) - to_days(Client.DOB)) / 365,0) >= 18
#warn qq|qClient=\n${qClient}\n|;
my $sClient = $dbh->prepare($qClient);
print qq|${DT}\n${Header}Missing Risk Assessment Report.\nClients with missing any Risk Assessment Test report\n|;
print qq|Client Name\tClientID\tActive\tDOB\tAge\tPA Number\tTransType\tProvider Name\tMessage\n|;
$sClient->execute();
while (my $rClient = $sClient->fetchrow_hashref)
{ 
  my $ClientID = $rClient->{'ClientID'};
  my $ActiveFlag = $rClient->{'Active'} ? 'Yes' : 'No';;
  my $Age = DBUtil->Date($rClient->{DOB}, 'age');
  my $msg = 'NO CLIENT RISK ASSESSMENT';
  $sProvider->execute($rClient->{ProvID});
  my ($ProvLName, $ProvFName) = $sProvider->fetchrow_array;
  my $ProvName = qq|$ProvLName, $ProvFName ($rClient->{ProvID})|; 
  print qq|$rClient->{'LName'}, $rClient->{'FName'}\t${ClientID}\t${ActiveFlag}\t$rClient->{'DOB'}\t${Age}\t$rClient->{'PAnumber'}\t$rClient->{'TransType'}\t${ProvName}\t${msg}\n|;
}

$sProvider->finish();
$sClient->finish();
myDBI->cleanup();
exit;
############################################################################
