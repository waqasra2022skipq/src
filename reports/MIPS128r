#!/usr/bin/perl
use strict;
use warnings;
use lib 'C:/xampp/htdocs/src/lib';

use DBI;
use myForm;
use myDBI;
use DBA;
use DBUtil;
use Time::Local;

my $DT    = localtime();
my $form  = myForm->new();
my $dbh   = myDBI->dbconnect( $form->{'DBNAME'} );
my $debug = $form->{'LOGINPROVID'} == 91 ? 0 : 0;

if ($debug) {
    foreach my $f ( sort keys %{$form} ) { print "form-$f=$form->{$f}\n"; }
}

$form = DBUtil->setDates($form);
my $DateRange = qq|from $form->{FromDateD} thru $form->{ToDateD}|;
my $multidel  = 'Ã½';
my $ForProvID = $form->{ForProvID} || $form->{LOGINPROVID};

my $withSelection = DBA->withSelection( $form, 'and', 'Client.clinicClinicID',
    'Treatment.ProvID', 'Treatment.ClientID', 'Treatment.TrID' );
my $Header = DBA->withSelectionHeader($form);
$withSelection .= qq| and Client.Active=1| if ( $form->{Active} );

my $QID = qq|QID128|;
my $TITLE =
qq|Preventive Care and Screening: Body Mass Index (BMI) Screening and Follow-Up Plan - National Quality Strategy Domain: Community/Population Health - Meaningful Measure Area: Preventive Care|;
my $CTYPE = qq|MIPS CLINICAL QUALITY MEASURES (CQMS)|;
my $MTYPE = qq|Process|;
my $DESC =
qq|Percentage of patients aged 18 years and older with a BMI documented during 
the current encounter or within the previous twelve months AND who had a follow-up 
plan documented if most recent BMI was outside of normal parameters|;

my @FLDS = (
    "ProvID:ProvID",
    "Provider Name:Provider Name",
    "total_pop:Total Population",
    "denom:denominator",
    "G9996:DNOM Excluded(G9996)",
    "G8420:Performance Met(G8420)",
    "G8421:Performance Not Met(G8421)",
    "Data Completeness Rate:Data Completeness Rate",
    "Performance Rate:Performance Rate"
);

my $numFLDS = scalar(@FLDS) - 2;
print qq|numFLDS=${numFLDS}\n| if ($debug);

my ( $Denominator, $total, $PFMET, $DNEXCEPTION, $PFNOTMET, $DNEXCLUDED ) =
  ( 0, 0, 0, 0, 0, 0 );

my $table_header = qq|\n|;
foreach my $f (@FLDS) {
    my ( $fld, $hdr ) = split( ':', $f );
    $table_header .= qq|${hdr}\t|;
}
$table_header .= qq|\n|;
my $table_entries = '';

$form = DBUtil->setDates($form);

my $sClientVitalSigns = $dbh->prepare(
    "select * from ClientVitalSigns where ClientID=? and
    vDate BETWEEN '2024-01-01' AND '2024-12-31' order by VDate"
);

our %providers = (
    "2118" =>
      { 'name' => "Kizzy McCaskill", "G9996" => 0, "G8420" => 0, "G8421" => 0 },
    "2128" =>
      { 'name' => "Rebecca Jones L", "G9996" => 0, "G8420" => 0, "G8421" => 0 },
    "2686" =>
      { 'name' => "Shelby Lucas", "G9996" => 0, "G8420" => 0, "G8421" => 0 },
    "958" =>
      { 'name' => "Mindy Jones K", "G9996" => 0, "G8420" => 0, "G8421" => 0 }
);

our %providers_rates = (
    "2118" => {
        'name'        => "Kizzy McCaskill",
        "total_pop"   => 0,
        "PFMET"       => 0,
        "PFNOTMET"    => 0,
        "initial_pop" => 0
    },
    "2128" => {
        'name'        => "Rebecca Jones L",
        "total_pop"   => 0,
        "PFMET"       => 0,
        "PFNOTMET"    => 0,
        "initial_pop" => 0
    },
    "2686" => {
        'name'        => "Shelby Lucas",
        "total_pop"   => 0,
        "PFMET"       => 0,
        "PFNOTMET"    => 0,
        "initial_pop" => 0
    },
    "958" => {
        'name'        => "Mindy Jones K",
        "total_pop"   => 0,
        "PFMET"       => 0,
        "PFNOTMET"    => 0,
        "initial_pop" => 0
    }
);

my $total_patients = 0;
my @missingVitals  = ();

my $qRecord = qq|
    select Treatment.TrID, Treatment.ContLogDate,xSC.SCNum
        , Client . ClientID, Provider . ProvID, ClientEmergency . HospiceCheck
        ,CONCAT(Provider.LName,', ',Provider.FName) as ProviderName
        ,CONCAT(Client.LName,', ',Client.FName) as ClientName
        ,Client.DOB,TIMESTAMPDIFF(YEAR, Client.DOB, CURDATE()) AS Age
        ,count(*) as pcount
    from Treatment 
    left join Client on Client.ClientID=Treatment.ClientID
    LEFT JOIN ClientEmergency ON Client
      . ClientID = ClientEmergency
      . ClientID
    left join Provider on Provider.ProvID=Treatment.ProvID
    left join xSC on xSC.SCID=Treatment.SCID
    left join xInsurance on xInsurance.ID=xSC.InsID
    WHERE Treatment
      . ContLogDate BETWEEN '2024-01-01' AND '2024-12-31' AND
    TIMESTAMPDIFF( YEAR, Client . DOB, CURDATE() ) >= 18
    AND Treatment.ClinicID=101
    AND Treatment
      . ProvID IN( "2118", "2128", "2686", "958" ) AND xInsurance
      . ID = 212
    AND(
        xSC.SCNum IN(
            '90791', '90792', '90832', '90834', '90837', '96156',
            '96158', '97161', '97162', '97163', '97165', '97166',
            '97167', '97802', '97803', '99202', '99203', '99204',
            '99205', '99212', '99213', '99214', '99215', '99304',
            '99305', '99306', '99307', '99308', '99309', '99310',
            '99315', '99316', '99341', '99342', '99344', '99345',
            '99347', '99348', '99349', '99350', '99424', '99491',
            'D7111', 'D7140', 'D7210', 'D7220', 'D7230', 'D7240',
            'D7241', 'D7250', 'D7251', 'G0101', 'G0108', 'G0270',
            'G0271', 'G0402', 'G0438', 'G0439', 'G0447', 'G0473'
        ) OR xSC
        . SCNum LIKE '99385%' OR xSC
        . SCNum LIKE '99386%' OR xSC
        . SCNum LIKE '99387%' OR xSC
        . SCNum LIKE '99395%' OR xSC
        . SCNum LIKE '99396%' OR xSC
        . SCNum LIKE '99397%' OR xSC
        . SCNum LIKE '99401%' OR xSC
        . SCNum LIKE '99402%'
    )

 group by Treatment.ClientID
|;

my $sRecord = $dbh->prepare($qRecord);
$sRecord->execute();

my $sCheckHospice = $dbh->prepare(
    "SELECT cp.InitiatedDate, i.ICD10, i.sctName FROM ClientProblems cp
		LEFT JOIN okmis_config.misICD10 i ON cp.UUID = i.ID 
		WHERE cp.ClientID = ? AND
		i.ICD10 = 'Z51.5'"
);

my $ClientID;
my $ProvID;
while ( my $rRecord = $sRecord->fetchrow_hashref ) {
    $ProvID   = $rRecord->{'ProvID'};
    $ClientID = $rRecord->{ClientID};

    $providers_rates{$ProvID}{'initial_pop'} += 1;

    $providers_rates{$ProvID}{'total_pop'} += 1;

    $sCheckHospice->execute($ClientID);

    if ( $sCheckHospice->rows > 0 ) {

        # Hospice Check is active so exclude the patient
        $DNEXCLUDED++;
        $providers_rates{$ProvID}{'DNEXCLUDED'} += 1;
        $providers{$ProvID}{'G9996'}            += 1;
    }
    else {
        my $ClientID = $rRecord->{'ClientID'};
        $sClientVitalSigns->execute($ClientID);
        my $rClientVitalSigns = $sClientVitalSigns->fetchrow_hashref;
        my $BMI               = $rClientVitalSigns->{BMI};
        my $HeightFeet        = $rClientVitalSigns->{HeightFeet};
        my $Weight            = $rClientVitalSigns->{Weight};

        if (   $rClientVitalSigns->{ID} eq ""
            || $rClientVitalSigns->{ID} eq "null" )
        {
            $PFNOTMET++;
            $providers_rates{$ProvID}{'PFNOTMET'} += 1;
            $providers{$ProvID}{'G8421'}          += 1;
        }
        else {
            if ( $BMI ne "" || ( $HeightFeet && $Weight ) ) {
                $PFMET++;
                $providers_rates{$ProvID}{'PFMET'} += 1;
                $providers{$ProvID}{'G8420'}       += 1;
            }
            else {
                $PFNOTMET++;
                $providers_rates{$ProvID}{'PFNOTMET'} += 1;
                $providers{$ProvID}{'G8421'}          += 1;
            }
        }
    }
}

foreach my $ProvID ( sort keys %providers ) {
    $table_entries .= qq|$ProvID\t|;

    my $provName = $providers{$ProvID}{'name'};
    $table_entries .= qq|$provName\t|;
    my $initial_pop = $providers_rates{$ProvID}{'initial_pop'};
    $table_entries .= qq|$initial_pop\t|;
    my $total_pop = $providers_rates{$ProvID}{'total_pop'};
    $table_entries .= qq|$total_pop\t|;

    my $G9996 = $providers{$ProvID}{'G9996'};
    $table_entries .= qq|$G9996\t|;
    my $G8420 = $providers{$ProvID}{'G8420'};
    $table_entries .= qq|$G8420\t|;
    my $G8421 = $providers{$ProvID}{'G8421'};
    $table_entries .= qq|$G8421\t|;

    my $pr_PFMET    = $providers_rates{$ProvID}{'PFMET'};
    my $pr_PFNOTMET = $providers_rates{$ProvID}{'PFNOTMET'};
    my $DNEXCLUDED  = $providers_rates{$ProvID}{'DNEXCLUDED'};

    my $Data_Completeness_Numerator =
      ( $pr_PFMET + $pr_PFNOTMET + $DNEXCLUDED );

    if ( 0 eq $total_pop ) {
        $total_pop = 1;
    }
    my $Data_Completeness_Rate =
      ( $Data_Completeness_Numerator / $total_pop ) * 100;
    my $Performance_Rate =
        ( $Data_Completeness_Numerator > $DNEXCLUDED )
      ? ( $pr_PFMET / ( $Data_Completeness_Numerator - $DNEXCLUDED ) ) * 100
      : 0;

    $Data_Completeness_Rate = sprintf( "%.2f", $Data_Completeness_Rate );
    $Performance_Rate       = sprintf( "%.2f", $Performance_Rate );

    $table_entries .= qq|$Data_Completeness_Rate\t|;
    $table_entries .= qq|$Performance_Rate\t|;
    $table_entries .= qq|\n|;
}

$Header = qq|${DT}\n${QID} ${TITLE} ${DateRange} ${Header}|;

print $Header;
print $table_header;
print $table_entries;

$sClientVitalSigns->finish();
$sRecord->finish();
myDBI->cleanup();
exit;
