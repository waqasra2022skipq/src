#!/usr/bin/perl
use lib '/var/www/okmis/src/lib';
use CGI       qw(:standard escape);
use CGI::Carp qw(warningsToBrowser fatalsToBrowser);
use DBI;
use myForm;
use myDBI;
use DBA;
use DBUtil;
use Time::Local;
use uCalc;
my $DT = localtime();
############################################################################
# usage:
#   MIPS134
############################################################################
my $form  = myForm->new();
my $dbh   = myDBI->dbconnect( $form->{'DBNAME'} );
my $debug = $form->{'LOGINPROVID'} == 91 ? 0 : 0;
if ($debug) {
    foreach my $f ( sort keys %{$form} ) { print "form-$f=$form->{$f}\n"; }
}
$form = DBUtil->setDates($form);
my $DateRange = qq|from $form->{FromDateD} thru $form->{ToDateD}|;

my $multidel  = 'Ã½';
my $ForProvID = $form->{ForProvID} ? $form->{ForProvID} : $form->{LOGINPROVID};

# join xInsurance needed for withSelection
my $withSelection = DBA->withSelection( $form, 'and', 'Client.clinicClinicID',
    'Treatment.ProvID', 'Treatment.ClientID', 'Treatment.TrID' );
my $Header = DBA->withSelectionHeader($form);
print qq|Header: ${Header}\n|              if ($debug);
$withSelection .= qq| and Client.Active=1| if ( $form->{Active} );
$QID = qq|QID283|;
$TITLE =
qq|Dementia Associated Behavioral and Psychiatric Symptoms Screening and Management - National Quality Strategy Domain: Effective Clinical Care - Meaningful Measure Area: Prevention, Treatment, and Management of Mental Health|;
my @FLDS = (
    'ClinicName:ClinicName',           'LName:LastName',
    'FName:FirstName',                 'ClientID:ClientID',
    'DOB:DateOfBirth',                 'Age:Age',
    'PrimaryProvider:PrimaryProvider', "Status:Status",
    "pcount:Note Count"
);
my $numFLDS = scalar(@FLDS) - 2;
print qq|numFLDS=${numFLDS}\n| if ($debug);

my ( $rcount, $total, $PFMET, $DNEXCEPTION, $PFNOTMET, $DNOM, $DNEXl ) =
  ( 0, 0, 0, 0, 0, 0, 0 );

my $table_header = '';
foreach my $f (@FLDS) {
    my ( $fld, $hdr ) = split( ':', $f );
    $table_header .= qq|${hdr}\t|;
}

$table_header .= qq|\n|;
$table_entries = '';

my $ClientSelection =
  DBA->withSelection( $form, 'and', 'Client.clinicClinicID' );

my $qRecord = qq|
    select Treatment . TrID, Treatment . ContLogDate, xSC . SCNum,
      xInsurance . Descr as Insurance,
    Client . LName, Client . FName
    , Clinic . Name as ClinicName
        , Client . ClientID, Provider . ProvID, ClientEmergency . HospiceCheck
        , CONCAT( Provider . LName, ', ', Provider . FName ) as PrimaryProvider
        ,CONCAT(Client.LName,', ',Client.FName) as ClientName
        ,Client.DOB,TIMESTAMPDIFF(YEAR, Client.DOB, CURDATE()) AS Age
        ,count(*) as pcount
    from Treatment 
    left join Client on Client.ClientID=Treatment.ClientID
    LEFT JOIN ClientEmergency ON Client
      . ClientID = ClientEmergency
      . ClientID
    left join Provider on Provider.ProvID=Treatment.ProvID
    left join Provider as Clinic on Clinic . ProvID = Client . clinicClinicID
    left join xSC on xSC.SCID=Treatment.SCID
    left join xInsurance on xInsurance.ID=xSC.InsID
    WHERE Treatment.ContLogDate BETWEEN '2024-01-01' AND '2024-12-31'
    AND Treatment
      . ProvID IN( "2118", "2128", "2686", "958" ) AND xInsurance
    . ID = 212 AND Treatment . ClinicID = 101
    AND(
        xSC
          . SCNum IN(
            '59400', '59510', '59610', '59618', '90791', '90792',
            '90832', '90834', '90837', '92622', '92625', '96112',
            '96105', '96116', '96125', '96127', '96130', '96132',
            '96136', '96138', '96146', '96156', '96158', '96164',
            '96167', '96170', '97161', '97162', '97163', '97164',
            '97165', '97166', '97167', '97168', '97802', '97803',
            '98966', '98967', '98968', '99078', '99202', '99203',
            '99204', '99205', '99211', '99212', '99213', '99214',
            '99215', '99221', '99222', '99223', '99231', '99232',
            '99233', '99238', '99239', '99242', '99243', '99244',
            '99245', '99252', '99253', '99254', '99255', '99281',
            '99282', '99283', '99284', '99285', '99304', '99305',
            '99306', '99307', '99308', '99309', '99310', '99315',
            '99316', '99341', '99342', '99344', '99345', '99347',
            '99348', '99349', '99350', '99424', '99426', '99487',
            '99490', '99491', '99497', 'G0101', 'G0270', 'G0271',
            'G0402', 'G0438', 'G0439', 'G0444'
          ) OR xSC
          . SCNum LIKE '99384%' OR xSC
          . SCNum LIKE '96110%' OR xSC
          . SCNum LIKE '99385%' OR xSC
          . SCNum LIKE '99386%' OR xSC
          . SCNum LIKE '99387%' OR xSC
          . SCNum LIKE '99394%' OR xSC
          . SCNum LIKE '99395%' OR xSC
          . SCNum LIKE '99396%' OR xSC
          . SCNum LIKE '99397%'
      )


 group by Treatment.ClientID
|;

my $srecord = $dbh->prepare($qRecord);
$srecord->execute();

my $sCheckDementiaDiagnoses = $dbh->prepare(
    "SELECT cp.InitiatedDate, i.ICD10, i.sctName FROM ClientProblems cp
        LEFT JOIN okmis_config.misICD10 i ON cp.UUID = i.ID 
        WHERE cp.ClientID = ? AND
        i.ICD10 IN('A52.17',  'A81.00','A81.01',  'A81.89',
            'F01.50',  'F01.51','F01.511', 'F01.518','F01.52',  'F01.53','F01.54',  'F01.A0','F01.A11', 
            'F01.A18','F01.A2',  'F01.A3','F01.A4',  'F01.B0',
            'F01.B11', 'F01.B18','F01.B2',  'F01.B3','F01.B4',  'F01.C0','F01.C11', 'F01.C18',
            'F01.C2',  'F01.C3','F01.C4',  'F02.80','F02.81',  'F02.811','F02.818', 'F02.82',
            'F02.83',  'F02.84','F02.A0',  'F02.A11','F02.A18', 'F02.A2','F02.A3',  'F02.A4',
            'F02.B0',  'F02.B11','F02.B18', 'F02.B2','F02.B3',  'F02.B4','F02.C0',  'F02.C11',
            'F02.C18', 'F02.C2','F02.C3',  'F02.C4','F03.90',  'F03.91','F03.911', 'F03.918',
            'F03.92',  'F03.93','F03.94',  'F03.A0','F03.A11', 'F03.A18','F03.A2',  'F03.A3',
            'F03.A4',  'F03.B0','F03.B11', 'F03.B18','F03.B2',  'F03.B3','F03.B4',  'F03.C0',
            'F03.C11', 'F03.C18','F03.C2',  'F03.C3','F03.C4',  'F05','F10.27',  'G30.0',
            'G30.1',   'G30.8','G30.9',   'G31.01','G31.09',  'G31.83','G31.85',  'G31.89','G94'
            )"
);

my $checkBIMS = $dbh->prepare(
"SELECT * FROM ClientBIMS b WHERE b.ClientID = ? AND b.TestDate BETWEEN '2024-01-01' AND '2024-12-31'"
);
my $checkMMSE = $dbh->prepare(
"SELECT * FROM ClientMMSE m WHERE m.ClientID = ? AND m.TestDate BETWEEN '2024-01-01' AND '2024-12-31'"
);

while ( my $rrecord = $srecord->fetchrow_hashref ) {

    my $ClientID = $rrecord->{ClientID};

    $sCheckDementiaDiagnoses->execute($ClientID);
    my $sCheckDementiaDiagnosesRows = $sCheckDementiaDiagnoses->rows;
    if ( $sCheckDementiaDiagnosesRows < 1 ) {
        next;
    }

    if ( $rrecord->{'pcount'} < 2 ) {
        next;
    }

    $checkBIMS->execute($ClientID);
    my $rCheckBIMS     = $checkBIMS->fetchrow_hashref;
    my $sCheckBIMSRows = $checkBIMS->rows;

    $checkMMSE->execute($ClientID);
    my $rCheckMMSE     = $checkMMSE->fetchrow_hashref;
    my $sCheckMMSERows = $checkMMSE->rows;

    if ( $sCheckBIMSRows < 1 && $sCheckMMSERows < 1 ) {
        $rrecord->{"Status"} = "Missing BIMS/MMSE Screening";
    }
    else {
        if ( $sCheckMMSERows > 0 ) {
            $rrecord->{"Status"} = "MMSE SCORE ";
            $rrecord->{"Status"} .=
                $rCheckMMSE->{"Score"}
              ? $rCheckMMSE->{"Score"}
              : calcTotal( $rCheckMMSE, 'q', 1, 17 );
        }
        else {
            $rrecord->{"Status"} = "BIMS SCORE ";
            $rrecord->{"Status"} .=
                $rCheckBIMS->{"Score"}
              ? $rCheckBIMS->{"Score"}
              : calcTotal( $rCheckBIMS, 'q', 1, 8 );
        }
    }

    $rcount++;
    foreach my $f (@FLDS) {
        my ( $fld, $hdr ) = split( ':', $f );
        $table_entries .= qq|$rrecord->{$fld}\t|;
    }

    $table_entries .= qq|\n|;

}

$Header = qq|${DT}\n${QID} ${TITLE} ${DateRange} ${Header}\n|;

print $Header;
print $table_header;
print $table_entries;

print qq|Total Clients\t${rcount}| . "\t" x $numFLDS . "\n";

sub flagCountLabel {
    my ( $type, $val, $max ) = @_;

    my $html =
      $val >= $max
      ? "<p STYLE='background-color: red'> <b>Major Depressive:</b> G8431, ${type} Total of ${val}<BR>screening for clinical depression is documented as being POSITIVE and a follow-up plan is documented</p>"
      : "<p STYLE='background-color: orange'><b>Other Depressive:</b> G8432, ${type} Total of ${val}<BR>screening for clinical depression is documented as being NEGATIVE and a follow-up plan is not required</p>";
    return ($html);
}

$srecord->finish();
$sCheckDementiaDiagnoses->finish();
$checkBIMS->finish();
$checkMMSE->finish();

myDBI->cleanup();
exit;
############################################################################

sub calcTotal {
    my ( $rPHQ, $pfx, $beg, $end ) = @_;

#foreach my $f ( sort keys %{$rPHQ} ) { warn "uCalc-calcTotal: rPHQ-$f=$rPHQ->{$f}\n"; }
    my $cnt = 0;
    if ( $beg eq '' || $end eq '' ) {
        $cnt = $rPHQ->{$pfx};
    }    # no loop, just this field (pfx).
    else {
        for my $i ( $beg .. $end ) {

            my $f = $pfx . $i;

            my $f_a = $f . 'a';
            my $f_b = $f . 'b';

            if ( $rPHQ->{$f_a} ne '' ) {
                $cnt += $rPHQ->{$f_a};
            }

            $cnt += $rPHQ->{$f};
        }

    }

    # die qq|pfx=${pfx}, beg=${beg}, end=${end}, cnt=${cnt}\n|;
    return ($cnt);
}
