#!/usr/bin/perl
use lib 'C:/xampp/htdocs/src/lib';
use Cwd;
use DBI;
use myForm;
use myDBI;
use DBUtil;
use myConfig;
use myHTML;
use SysAccess;
use gXML;
use XML::LibXSLT;
use XML::LibXML;
binmode STDOUT, ":utf8";

############################################################################
my $form = myForm->new();
my $dbh  = myDBI->dbconnect( $form->{'DBNAME'} );
foreach my $f ( sort keys %{$form} ) {
    warn "genCCDAs: form-$f=$form->{$f}<BR>\n";
}
if ( !SysAccess->chkPriv( $form, 'MUAgent' ) ) {
    myDBI->error("Meaningful Use / Access Denied!");
}

my $NextLocation;
if   ( $form->{submit} ) { $NextLocation = main->submit($form); }
else                     { $NextLocation = main->report($form); }

#warn qq|genCCDAs: NextLocation=${NextLocation}\n|;
myDBI->cleanup();
print $NextLocation;
exit;

############################################################################
sub report {
    my ( $self, $form ) = @_;

    #$pwd=cwd();
    #warn qq|genCCDAs: pwd=${pwd}\n|;
    my $cmd =
qq|C:/xampp/htdocs/src/cgi/bin/GenReport.cgi Name=GenerateCCDAs\&daterange=2yago\&InsID=100\&ClinicIDs=2501\&ProvIDs=2502\&DBNAME=$form->{DBNAME}\&mlt=$form->{mlt}|;
    my $html = `${cmd}`;
    my $html = myHTML->close(1);
    return ($html);
}

sub submit {
    my ( $self, $form ) = @_;
    my $err    = '';
    my $Token  = DBUtil->genToken();
    my $Folder = $form->{'Folder'} ? $form->{'Folder'} : $Token;
    my $ForProvID =
      $form->{'ForProvID'} ? $form->{'ForProvID'} : $form->{'LOGINPROVID'};
    warn qq|genCCDAs: submit=$form->{'submit'}\n|;
    $form = DBUtil->setDates($form);
    $form->{InsIDs} = $form->{InsID};

    # withClinicProvider uses InsIDs
    my $with =
qq|where Treatment.ContLogDate between '$form->{FromDate}' and '$form->{ToDate}' |;
    $with .= DBA->withSelection( $form, 'and', 'Treatment.ClinicID',
        'Treatment.ProvID', 'Treatment.ClientID', 'Treatment.TrID' );
    warn qq|genCCDAs: with=${with}\n|;
    my $sTreatment = $dbh->prepare(
"select * from Treatment left join xSC on xSC.SCID=Treatment.SCID left join xInsurance on xInsurance.ID=xSC.InsID ${with}"
    );
    $sTreatment->execute()
      || myDBI->dberror("genCCDAs: select failed! ${with}");
    while ( my $r = $sTreatment->fetchrow_hashref ) {
        $err .=
          main->genFILES( $Token, $r->{ProvID}, $r->{ClientID}, $r->{TrID} );
    }

    # create temporary directory for files created and zip from this shell...
    my $BIN = myConfig->cfg('BIN');
    my $shell =
`${BIN}/zipFILEs $form->{'DOCROOT'} "CCDA_${Token}*" ${Folder} ${ForProvID} yes`;
    main->addEDoc( $Folder, $ForProvID );
    DBA->setAlert( $form, $err );
    my $link =
qq|/cgi/bin/mis.cgi?view=ListExportFiles.cgi&Provider_ProvID=${ForProvID}&mlt=$form->{'mlt'}&misLINKS=$form->{'misLINKS'}|;
    warn "genCCDAs: setHTML: link=${link}=\n";
    my $html =
      myHTML->newHTML( $form, 'Send CCDA',
        'CheckPopupWindow noclock countdown_1' )
      . qq|

<TABLE CLASS="main" >
  <TR> <TD CLASS="hdrcol title" >Send CCDAs</TD> </TR>
</TABLE>
<FORM NAME="CCDA" ACTION="/src/cgi/bin/sendCCDA.cgi" METHOD="POST" >
<P CLASS="port hdrtxt heading" >Export Documents created as:<BR>Folder ${Folder}</P>
<P CLASS="port hdrtxt title" >Close this window to navigate to your Export CCDA Documents screen.</P>
<TABLE CLASS="main fullsize" >
  <TR>
    <TD CLASS="numcol" >
      <INPUT TYPE="button" NAME="cancel" VALUE="close" ONCLICK="javascript:LoadInParent('${link}',true)" >
    </TD>
  </TR>
</TABLE>

</LOADHIDDEN>
</FORM>
<SCRIPT LANGUAGE="JavaScript">
document.CCDA.elements[0].focus();
</SCRIPT>
<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR>
</BODY>
</HTML>
|;
    return ($html);
}
############################################################################
sub genFILES {
    my ( $self, $Token, $NoteProvID, $ClientID, $TrID ) = @_;
##
    # first generate the XML file...
    my $xml = qq|<?xml version="1.0" encoding="utf-8"?>\n|
      . gXML->setXML( $form, $NoteProvID, $ClientID, $TrID, '', '',
        'CCDA nonulls' );
    warn qq|genCCDAs AFTER setXML: xml=${xml}\n|;
    my $xmlfile = qq|/tmp/XML_${Token}_${TrID}.xml|;
    my $xmlpath = qq|$form->{DOCROOT}${xmlfile}|;
    warn qq|genCCDAs: xmlpath=${xmlpath}\n|;
    open( XML, ">", $xmlpath ) || die "Couldn't open '${xmlpath}' file: $!";
    print XML $xml;
    close(XML);

    # next the generate Visit CCDA file...
    my $visitout  = gXML->styleCCDA( $form, $xmlfile, 'Visit' );
    my $visitfile = qq|/tmp/CCDA_${Token}_${TrID}_Visit.xml|;
    my $visitpath = qq|$form->{DOCROOT}${visitfile}|;
    open( OUT, ">:encoding(UTF-8)", $visitpath )
      || die "Couldn't open '${visitpath}' file: $!";
    print OUT $visitout;
    close(OUT);

    # next the generate Referral CCDA file...
    my $referralout  = gXML->styleCCDA( $form, $xmlfile, 'Referral' );
    my $referralfile = qq|/tmp/CCDA_${Token}_${TrID}_Referral.xml|;
    my $referralpath = qq|$form->{DOCROOT}${referralfile}|;
    open( OUT, ">:encoding(UTF-8)", $referralpath )
      || die "Couldn't open '${referralpath}' file: $!";
    print OUT $referralout;
    close(OUT);

    return ();
}

sub addEDoc {
    my ( $self, $Folder, $ForProvID ) = @_;
    my $r = ();
    $r->{ProvID}       = $ForProvID;
    $r->{Title}        = $Folder;
    $r->{Descr}        = "CCDA Zip file created " . localtime();
    $r->{Path}         = qq|/Provider/EDocs/${ForProvID}/${Folder}.zip|;
    $r->{CreateProvID} = $form->{LOGINPROVID};
    $r->{CreateDate}   = $form->{TODAY};
    $r->{Type}         = 40;                                             # CCDAs
    $r->{Public}       = 0;
    $query =
      DBA->genReplace( $form, $dbh, 'ProviderEDocs', $r, "Path='$r->{Path}'" );
    my $sql = $dbh->prepare($query);
    $sql->execute() || myDBI->dberror($query);
    return ();
}
############################################################################
