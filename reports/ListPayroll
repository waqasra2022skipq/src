#!/usr/bin/perl
use lib 'C:/xampp/htdocs/src/lib';
use myConfig;
use Cwd;
use DBI;
use DBForm;
use DBUtil;
use SysAccess;

############################################################################
$pwd  = cwd();
$form = DBForm->new();
if ( !SysAccess->verify( $form, 'Privilege=Payroll' ) ) {
    $form->error("MarkPaid / Access Denied");
}

my $dbh = $form->dbconnect();

#chdir("$form->{DOCROOT}/reports2");
############################################################################
# Start out the display.
print qq|Content-type: text/html\n\n
<!DOCTYPE html>
<HTML>
<HEAD> <TITLE>List Payroll</TITLE>
  <LINK rel="stylesheet" TYPE="text/css" HREF="|
  . myConfig->cfgfile( 'main.css', 1 ) . qq|" >
  <LINK rel="stylesheet" TYPE="text/css" HREF="/cgi/jcal/calendar-forest.css" >
  <SCRIPT TYPE="text/javascript" SRC="/src/cgi/js/utils.js"></SCRIPT>
  <SCRIPT TYPE="text/javascript" SRC="/cgi/jcal/calendar.js"></SCRIPT>
  <SCRIPT TYPE="text/javascript" SRC="/cgi/jcal/calendar-en.js"></SCRIPT>
  <SCRIPT TYPE="text/javascript" SRC="/cgi/jcal/calendar-setup.js"></SCRIPT>
</HEAD>
<BODY >
<DIV ALIGN="center" >
|;
############################################################################
# FIRST THE PAYROLL FILES.
## Add description...
##'Lists the Summary, Detail and MarkPaid payroll files.  Each time the payroll report is run, these 3 files are created.  Use the Summary and Detail Payroll files to view the payroll summary and detail information. Use the MarkPaid files to close out those notes on the lastest Payroll report that was used to pay from. Only 1 MarkPaid needs to be run, the final (last) one used for payroll data.  This gets the notes marked and ready for the next time payroll is run so they don\'t show up on that next run resulting in duplicated payroll errors.'
print qq|
<TABLE CLASS="port" >
  <TR>
    <TD CLASS="hdrcol" >
      <DIV CLASS="heading hdrtxt" >Payroll Files to Select</DIV>
      <DIV CLASS="hdrcol" >These Summary/Detail/MarkPaid files are created with each Payroll run.</DIV>
      <DIV CLASS="hdrcol" >They are listed here with the last one run listed first.</DIV>
      <DIV CLASS="hdrcol" >When satisfied with the Summary/Detail then select the MarkPaid.</DIV>
      <DIV CLASS="hdrcol" >
|;
print main->disFiles( "$form->{DOCROOT}/reports2/$form->{LOGINPROVID}_Payroll*",
    5 );
print qq|
      </DIV>
      <DIV CLASS="hdrtxt" >After selecting the MarkPaid files are displayed below.</DIV>
    <TD>
  <TR>
</TABLE>
|;

# THEN THE MARKED FILES.
print qq|
<BR><BR>
<TABLE CLASS="port" >
  <TR>
    <TD CLASS="hdrcol" >
      <DIV CLASS="heading  hdrtxt" >Marked Payroll Files</DIV>
      <DIV CLASS="hdrcol" >Already MARKED Summary/Detail/MarkPaid files.</DIV>
      <DIV CLASS="hdrcol" >They are listed here with the last one run listed first.</DIV>
      <DIV CLASS="hdrcol" >These files are moved here after they are selected MarkPaid.</DIV>
      <DIV>
|;
print main->disFiles( "$form->{DOCROOT}/payroll/$form->{LOGINPROVID}_Payroll*",
    6 );
print qq|
      </DIV>
    <TD>
  <TR>
</TABLE>
</DIV>
</BODY>
</HTML>
|;
$form->complete();
exit;
############################################################################
sub disFiles() {
    my ( $self, $Dir, $Cnt ) = @_;
    my ( $html, $linecnt ) = ( '', 0 );
    $html .= qq|
<DIV ALIGN="center" >
<TABLE CLASS="home hdrcol" >
|;
    my $Files = main->getFiles( $Dir, $Cnt );

    #warn qq|\ndisFiles:\n|;
    # ascending: { $a <=> $b }; descending: { $b <=> $a }
    foreach my $key ( sort { $b cmp $a } keys %{$Files} ) {

        #warn qq|key=$key\nfile=$Files->{$key}\n|;
        $linecnt++;
        my ( $EDT, $ORDER, $SDT, $NAME, $TYPE ) = split( '_', $key );
        my $even = int( $linecnt / 2 ) == $linecnt / 2 ? '1' : '0';
        if   ($even) { $cls = qq|rpteven|; }
        else         { $cls = qq|rptodd|; }
        my $Y     = substr( $SDT, 0, 4 );
        my $M     = substr( $SDT, 4, 2 );
        my $D     = substr( $SDT, 6, 2 );
        my $SDATE = DBUtil->Date( "$Y-$M-$D", 'fmt', 'MM/DD/YYYY' );
        my $h     = substr( $SDT, 8,  2 );
        my $m     = substr( $SDT, 10, 2 );
        my $s     = substr( $SDT, 12, 2 );
        my $STIME = $h . ':' . $m . ':' . $s;
        my $link;
        my $exat;

        if ( $EDT eq '' || $Cnt == 5 ) {
            $link =
              $TYPE =~ /MARK/i
              ? qq|javascript:InputWindow('/src/cgi/bin/markPaid.cgi?MarkFile=$Files->{$key}&mlt=$form->{mlt}','Mark',400,400)|
              : qq|javascript:ReportWindow('/reports2/$Files->{$key}','Payroll')|;
        }
        else {
            $link =
              $TYPE =~ /MARK/i
              ? qq|javascript:alert('Already Marked')|
              : qq|javascript:ReportWindow('/payroll/$Files->{$key}','Payroll')|;
            my $Y     = substr( $EDT, 0, 4 );
            my $M     = substr( $EDT, 4, 2 );
            my $D     = substr( $EDT, 6, 2 );
            my $EDATE = DBUtil->Date( "$Y-$M-$D", 'fmt', 'MM/DD/YYYY' );
            my $h     = substr( $EDT, 8,  2 );
            my $m     = substr( $EDT, 10, 2 );
            my $s     = substr( $EDT, 12, 2 );
            my $ETIME = $h . ':' . $m . ':' . $s;
            $exat = qq|(Executed: ${EDATE} @ ${ETIME})|;
        }
        $html .= qq|
  <TR CLASS="${cls} hdrcol" >
    <TD >
      <A HREF="${link}" >${NAME} ${TYPE} ${SDATE} @ ${STIME} ${exat}</A>
    </TD>
  </TR>
|;
    }
    $html .= qq|
</TABLE>
</DIV>
|;
    return ($html);
}
############################################################################
# LAST THE MARKED PAID LIST.
sub disPayDates {
    my ($self)    = @_;
    my $AFTERDATE = DBUtil->Date( '', -3 );
    my $ADATE     = DBUtil->Date( $AFTERDATE, 'fmt', 'MM/DD/YYYY' );
    my $html      = qq|
<BR><BR>
<DIV CLASS="heading tophdr" >Listing of Paid Dates and count</DIV>
<TABLE CLASS="home hdrcol" >
  <TR CLASS="title" ><TD>Count of Notes Paid since ${ADATE}.</TD></TR>
|;
    my $cnt = 0;
    my $s   = $dbh->prepare(
"select PaidDate,count(*) as count from Treatment where PaidDate >= '${AFTERDATE}' group by PaidDate"
    );
    $s->execute() || $form->dberror($s);

    while ( my $r = $s->fetchrow_hashref ) {
        $cnt++;
        my $even = int( $cnt / 2 ) == $cnt / 2 ? '1' : '0';
        if   ($even) { $cls = qq|rpteven|; }
        else         { $cls = qq|rptodd|; }
        my $PaidDate =
          $r->{PaidDate} eq 'NULL'
          ? 'Unpaid'
          : DBUtil->Date( $r->{PaidDate}, 'fmt', 'MM/DD/YYYY' );
        $html .= qq|
  <TR CLASS="${cls}" >
    <TD CLASS="subtitle" >${PaidDate}</TD>
    <TD CLASS="sublink" >$r->{count}</TD>
  </TR>
|;
    }
    $s->finish();
    $html .= qq|</TABLE>\n|;
    return ($html);
}
############################################################################
sub getFiles() {
    my ( $self, $Dir, $Cnt ) = @_;

    #warn qq|\ngetFiles: Dir=$Dir, Cnt=$Cnt\n|;
    my @TmpFiles = glob($Dir);
    my $Files    = ();
    foreach $file (@TmpFiles) {
        my ( $dir, $fn ) = $file =~ m/(.*\/)(.*)$/;
        my ( $p1,  $p2 ) = $fn   =~ m/(.*)\.(.*)$/;
        my ( $key, $prov, $name, $type, $stamp, $token, $done ) =
          ( $p1, '', '', '', '', '', '' );
        if ( $Cnt == 5 ) {
            ( $prov, $name, $type, $stamp, $token ) =
              $p1 =~ m/(.*)\_(.*)\_(.*)\_(.*)\_(.*)$/;
            $done = $stamp;
        }
        else {
            ( $prov, $name, $type, $stamp, $token, $done ) =
              $p1 =~ m/(.*)\_(.*)\_(.*)\_(.*)\_(.*)\_(.*)$/;
        }
        if ( $type =~ /summary/i ) {
            $key = "${done}_1_${stamp}_${name}_${type}";
        }
        elsif ( $type =~ /detail/i ) {
            $key = "${done}_2_${stamp}_${name}_${type}";
        }
        else { $key = "${done}_3_${stamp}_${name}_${type}"; }

#warn qq|\nfile=$file; d=$dir, f=$fn\n|;
#warn qq|\np1=$p1, p2=$p2;\nn=$n, prov=$prov, name=$name, type=$type, stamp=$stamp, token=$token, done=$done\n|;
#warn qq|\nkey=$key\n|;
        $Files->{$key} = $fn if ( $prov == $form->{LOGINPROVID} );
    }
    return ($Files);
}
#####################################################################
