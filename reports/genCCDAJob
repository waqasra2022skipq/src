#!/usr/bin/perl
use lib '/var/www/okmis/src/lib';
use Cwd;
use DBI;
use DBForm;
use DBUtil;
use myConfig;
use myHTML;
use SysAccess;

############################################################################
my $form = DBForm->new();
$form = DBUtil->setDates($form);
my $dbh = $form->dbconnect();
if ( !SysAccess->chkPriv( $form, 'MUAgent' ) ) {
    $form->error("Meaningful Use Auth / Access Denied!");
}

#warn qq|genCCDAJob: whoami=|.`whoami`.qq|\n|;
#foreach my $f ( sort keys %{$form} ) { print qq|genCCDAJob: form-$f=$form->{$f}\n|; }

my $htmlmsg      = main->addJob($form);
my $NextLocation = main->html( $form, $htmlmsg );

#warn qq|genCCDAJob: NextLocation=\n${NextLocation}\n|;
print $NextLocation;
exit;

############################################################################
sub html {
    my ( $self, $form, $msg ) = @_;
    my $html =
      myHTML->newHTML( $form, 'Set CCDA Job',
        'CheckPopupWindow noclock countdown_1' )
      . qq|

<TABLE CLASS="main" >
  <TR> <TD CLASS="hdrcol header" >set JOB</TD> </TR>
  <TR> <TD CLASS="strcol" > ${msg} </TD> </TR>
</TABLE>

</LOADHIDDEN>
<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR>
</BODY>
</HTML>
|;
    return ($html);
}

sub addJob {
    my ( $self, $form ) = @_;
    my $msg = '';
    $msg .= '<BR>Missing Folder Name!' if ( $form->{'Folder'} eq '' );
    $msg .= '<BR>Missing FromDate!'    if ( $form->{'FromDate'} eq '' );
    $msg .= '<BR>Missing ToDate!'      if ( $form->{'ToDate'} eq '' );
    $msg .= '<BR>Missing StartTime!'   if ( $form->{'CronTime'} eq '' );
    return ($msg) unless ( $msg eq '' );
    my ( $user, $acct ) = split( '_', $form->{'DBNAME'}, 2 );
    my $cmd           = 'genCCDAs';
    my $BIN           = myConfig->cfg('BIN');
    my $ProvID        = $form->{'LOGINPROVID'};
    my $rProviderJobs = ();
    $rProviderJobs->{'CreateProvID'} = $form->{'LOGINPROVID'};
    $rProviderJobs->{'CreateDate'}   = $form->{'TODAY'};
    $rProviderJobs->{'ChangeProvID'} = $form->{'LOGINPROVID'};
    $rProviderJobs->{'ProvID'}       = $ProvID;
    $rProviderJobs->{'Active'}       = 1;
    $rProviderJobs->{'FromDate'}     = $form->{'FromDate'};
    $rProviderJobs->{'ToDate'}       = $form->{'ToDate'};
    $rProviderJobs->{'ClinicIDs'}    = $form->{'ClinicIDs'};
    $rProviderJobs->{'ProvIDs'}      = $form->{'ProvIDs'};
    $rProviderJobs->{'InsIDs'}       = $form->{'InsIDs'};
    $rProviderJobs->{'ClientIDs'}    = $form->{'ClientIDs'};
    $rProviderJobs->{'CronTime'}     = $form->{'CronTime'};
    $rProviderJobs->{'CronDay'}      = $form->{'CronDay'};
    $rProviderJobs->{'CronMonth'}    = $form->{'CronMonth'};
    $rProviderJobs->{'CronWeek'}     = $form->{'CronWeek'};
    $rProviderJobs->{'Command'}      = $cmd;
    my $ID = DBA->doUpdate( $form, 'ProviderJobs', $rProviderJobs );
    my ( $hrs, $min, $sec ) = split( ':', $form->{'CronTime'}, 3 );
    my $dom     = $form->{'CronDay'} eq ''   ? '*' : $form->{'CronDay'};
    my $month   = $form->{'CronMonth'} eq '' ? '*' : $form->{'CronMonth'};
    my $week    = $form->{'CronWeek'} eq ''  ? '*' : $form->{'CronWeek'};
    my $outfile = qq|/home/${user}/logs/${cmd}.$form->{'DBNAME'}.${ID}.cronout|;
    warn qq|outfile=${outfile}\n|;
    my $croncmd =
qq|(crontab -l; echo "${min} ${hrs} ${dom} ${month} ${week} ${BIN}/${cmd} DBNAME=$form->{'DBNAME'}\\&ID=${ID} > ${outfile} 2>&1")|;
    warn qq|croncmd=${croncmd}\n|;
    my $rtncode = system("${croncmd} | crontab -");
    warn qq|rtncode=${rtncode}\n|;
##`(crontab -l; echo "${min} ${hrs} ${dom} ${month} ${week} ${BIN}/${cmd} DBNAME=$form->{'DBNAME'}\\&ID=${ID} > ${outfile} 2>&1") | crontab -`;
## remove entry: `crontab -u ${user} -l | grep -v 'perl /home/okmms/test.pl'  | crontab -u ${user} -`
## crontab -l -u okmms | grep -v "genCCDAs DBNAME=okmms_dev\\\&ID=2" | crontab -
    $msg = qq|added Job# ${ID} for Provider ${ProvID}.|;
    return ($msg);
}
############################################################################
