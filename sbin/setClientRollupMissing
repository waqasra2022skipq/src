#!/usr/bin/perl
use lib '/var/www/okmis/src/lib';
use DBI;
use myForm;
use myDBI;
use Rollup;
############################################################################
# usage: setClientRollup DBNAME=db&[ClientID=cid]
############################################################################
# get the command name...
my ( $pw, $cmd ) = $0 =~ m/(.*\/)(.*)$/;
print qq|#${cmd}: Started | . localtime() . qq|\n|;
my $form = myForm->new();
my $dbh  = myDBI->dbconnect( $form->{'DBNAME'} );

# for only 1 Client??
my $qClient =
  $form->{ClientID}
  ? qq|select * from Client where ClientID='$form->{ClientID}' order by ClientID|
  : qq|select * from Client order by ClientID|;

#print qq|qClient=${qClient}\n|;
my $sClient = $dbh->prepare($qClient);
$sClient->execute() || $form->dberror($qClient);
while ( my $rClient = $sClient->fetchrow_hashref ) {
    my $ClientID = $rClient->{'ClientID'};
    print qq|  Process ClientID=${ClientID}...\n|;
    ##
    # make sure the directory exists
    ##
    my $HomePath = qq|/Client/EDocs/${ClientID}|;
    my $RootPath = $form->{DOCROOT} . ${HomePath};
    system("/bin/mkdir -pm 777 ${RootPath}");

    Rollup->edocs( $form, $ClientID, 'ClientPrAuthCDC' );

    #warn qq|Progress: cnt=$cnt\n|;
}
myDBI->cleanup();
print qq|#${cmd}: Complete | . localtime() . qq|\n\n|;
############################################################################
exit;
