############################################################################
# DETAILTABLES is used in xSQL to delete SubTables.
# all tables should have a RECID, HEADERTABLE, DETAILID at least.
#      ShowClientNotes      => { SSELECT      => qq|select Treatment.*, DATE_FORMAT(Treatment.ContLogDate,'%m/%d/%Y') as VisitDate, Provider.LName as Provider from Treatment left join Provider on Provider.ProvID=Treatment.ProvID where Treatment.ClientID='_MAINSELECTID_' and Treatment.ContLogDate >= DATE_SUB(NOW(), INTERVAL 1 MONTH) order by Treatment.ContLogDate desc,Treatment.ContLogBegTime desc|,
##
our %TABLES = (
           NewAgency       => { RECID        => 'ID',
                                LOG          => 'no'
                              },
           MIPS            => { RECID        => 'ID',
                                LOG          => 'no'
                              },
           Surveys =>         { RECID        => 'ID',
                                ACCESS       => 'Privilege=SatSurveys',
                                LOG          => 'no'
                              },
           Appointments    => { RECID        => 'ID',
                                ACCESS       => 'Privilege=BillingReports',
                                LOG          => 'no'
                              },
           Provider        => { RECID        => 'ProvID',
                                ACCESS       => 'hasProviderAccess',
                                DETAILTABLES => ['ProviderCDAparms','CDSrules','ClientRenewals','Contracts','Credentials','EmplInfo','Equipment','Links','LinksLog','Manager','ManagerTree','UserLogin','PhiMail','PhiMailAttachments','ProviderLicenses','Projects','ProviderEDocs','ProviderHrs','ProviderIns','ProviderJobs','ProviderMail','ProviderPay','ProviderPrivs','ProviderPrefs','ProviderRpts','SiteACL','xMessages','Training','Timesheet'],
                                LOG          => 'no'
                              },
           ProviderCDAparms=> { RECID        => 'ID',
                                ACCESS       => 'Privilege=Agent',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           CDSrules        => { RECID        => 'ID',
                                ACCESS       => 'Privilege=Agent',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'yes'
                              },
           PhiMail         => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                DETAILTABLES => ['PhiMailAttachments']
                              },
        PhiMailAttachments => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'PhiMail', 
                                DETAILID     => 'PhiMailID'
                              },
            ClientRenewals => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderControl => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Links           => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           LinksLog        => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Manager         => { RECID        => 'ProviderID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProviderID',
                                LOG          => 'no'
                              },
           ManagerTree     => { RECID        => 'TreeProvID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'TreeProvID',
                                LOG          => 'no'
                              },
           Training        => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderJobs    => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
          ProviderLicenses => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderIns     => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderPay     => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                EXPFIRST     => 'yes',
                                LOG          => 'no'
                              },
           SiteACL         => { RECID        => 'ID',
                                ACCESS       => 'Privilege=Agent',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           xMessages       => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Projects        => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           UserLogin       => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'UserID',
                                LOG          => 'no'
                              },
           EmplInfo        => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Equipment       => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderCreds   => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Credentials     => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderPrivs   => { RECID        => 'Type',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderPrefs   => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Timesheet       => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderHrs     => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                SORT         => ''
                              },
           ProviderRpts    => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderEDocs   => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           ProviderMail    => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Contracts       => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Reminders       => { RECID        => 'ID',
                                ACCESS       => 'hasProviderAccess',
                                HEADERTABLE  => 'Provider', 
                                DETAILID     => 'ProvID',
                                LOG          => 'no'
                              },
           Client          => { RECID        => 'ClientID',
                                ACCESS       => 'hasClientAccess',
                                DETAILTABLES => [
'ClientASAM',
'ClientASI',
'ClientBasis32',
'ClientCARSReview',
'ClientAccess',
'ClientACE',
'ClientACL',
'ClientAdMeds',
'ClientAdmit',
'ClientAllergies',
'ClientAUDIT',
'ClientAUDITC',
'ClientCANS',
'ClientCATS',
'ClientCDCHA',
'ClientCRAFFT',
'ClientCSSRS',
'ClientCSSRSs',
'ClientCSSRSt',
'ClientDCGD',
'ClientDevl',
'ClientDischarge',
'ClientEDocs',
'ClientEducation',
'ClientEmergency',
'ClientFamily',
'ClientGAD7',
'ClientGDS',
'ClientGDSS',
'ClientGDSL',
'ClientHealth',
'ClientIncome',
'ClientInsRemarks',
'ClientInsRemarksDetail',
'ClientInterventionsOrdered',
'ClientInterventionsPerformed',
'ClientIntake',
'ClientJournals',
'ClientLabs',
'ClientLegal',
'ClientLegalHx',
'ClientLegalPP',
'ClientMeds',
'ClientMHProblems',
'ClientMHSF',
'ClientMMSE',
'ClientSMFQ',
'ClientODAS',
'ClientODAS2017',
'ClientOOWS',
'ClientOpioidRegistry',
'ClientPCL5',
'ClientPCLC',
'ClientPHQ',
'ClientPHQ15',
'ClientPHQ2',
'ClientPHQ4',
'ClientPHQ9',
'ClientPHQBrief',
'ClientPHQSADS',
'ClientProblems',
'ClientProcedures',
'ClientReferrals',
'ClientRelations',
'ClientResources',
'ClientReview',
'ClientRiskAssessment',
'ClientSAAlcohol',
'ClientSATobacco',
'ClientSBIRT',
'ClientSocial',
'ClientSummary',
'ClientTCUDS',
'ClientTPHQ9',
'ClientTrauma',
'ClientTrPlan',
'ClientVaccines',
'ClientVitalSigns',
'ClientTASI',
'Eligible',
'EligibleDMH',
'Gambling',
'GuardianHistory',
'Hospital',
'IES',
'InsPaid',
'Insurance',
'Invoices',
'MedHx',
'MentalStat',
'PDMed',
'PDPsyStat',
'SAbuse',
'SOGS',
'SOGSGSI',
'Treatment'
],
                                SORT         => ''
                              },
           ClientAccess    => { RECID        => 'ClientID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientACL       => { RECID        => 'ClientID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientAdmit     => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientFamily    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['ClientFamilyProblems'],
                                LOG          => 'no'
                              },
      ClientFamilyProblems => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientFamily', 
                                DETAILID     => 'ClientFamilyID',
                                LOG          => 'no'
                              },
           ClientRelations => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientResources => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientInsRemarks => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
    ClientInsRemarksDetail => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientEducation => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientEmergency => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientLabs       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['ClientLabResults'],
                              },
          ClientLabResults => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientLabs', 
                                DETAILID     => 'ClientLabsID',
                                DETAILTABLES => ['ClientLabResultsOBX'],
                              },
       ClientLabResultsOBX => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientLabResults', 
                                DETAILID     => 'ClientLabResultsID',
                              },
          ClientMeds       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientAdMeds     => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientVitalSigns => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
ClientInterventionsOrdered => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
ClientInterventionsPerformed => { RECID        => 'ID',
                                  ACCESS       => 'hasClientAccess',
                                  HEADERTABLE  => 'Client', 
                                  DETAILID     => 'ClientID',
                                  LOG          => 'no'
                              },
      ClientRiskAssessment => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientAllergies  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           CDC             => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           Eligible        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           EligibleDMH     => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           InsPaid         => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           Insurance       => { RECID        => 'InsNumID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['ClientPrAuth','Guarantor'],
                                EXPFIRST     => 'yes',
                                LOG          => 'no'
                              },
           Guarantor       => { RECID        => 'GrtrID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Insurance', 
                                DETAILID     => 'InsuranceID',
                                LOG          => 'no'
                              },
           ClientPrAuth    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Insurance', 
                                DETAILID     => 'InsuranceID',
                                DETAILTABLES => ['ClientPrAuthCDC','TrPlan','PDDiag','PDDom','PrAuthRVU','PALines'],
                                LOG          => 'no'
                              },
           ClientPrAuthCDC => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuth', 
                                DETAILID     => 'ClientPrAuthID',
                                DETAILTABLES => ['ClientPrAuthCDCSent'],
                                LOG          => 'no'
                              },
     ClientPrAuthCDCSent   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuthCDC', 
                                DETAILID     => 'ClientPrAuthCDCID',
                                LOG          => 'no'
                              },
           TrPlan          => { RECID        => 'TrPlanID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuth', 
                                DETAILID     => 'PrAuthID',
                                DETAILTABLES => ['TrPlanIP','TrPlanS'],
                                LOG          => 'no'
                              },
           TrPlanIP        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'TrPlan', 
                                DETAILID     => 'TrPlanID',
                                LOG          => 'no'
                              },
           TrPlanS         => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'TrPlan', 
                                DETAILID     => 'TrPlanID',
                                LOG          => 'no'
                              },
           PALines         => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuth', 
                                DETAILID     => 'PrAuthID',
                                LOG          => 'no'
                              },
           PDDiag          => { RECID        => 'PDDiagID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuth', 
                                DETAILID     => 'PrAuthID',
                                LOG          => 'no'
                              },
           PDDom           => { RECID        => 'PDDomID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuth', 
                                DETAILID     => 'PrAuthID',
                                LOG          => 'no'
                              },
           PrAuthRVU       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientPrAuth', 
                                DETAILID     => 'PrAuthID',
                                LOG          => 'no'
                              },
           ClientBasis32   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           IES             => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientASI       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'G1',
                                LOG          => 'no'
                              },
           ClientTASI      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientACE        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientASAM      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => 'CreateDate'
                              },
           SOGS            => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           SOGSGSI         => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientGAD7       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID'
                              },
           ClientIntake    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID'
                              },
           ClientLegal     => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientLegalHx   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientLegalPP   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientSummary   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientSocial    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientTrauma    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientProblems  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientReferrals => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientTrPlan    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['ClientTrPlanPG','ClientTrPlanS'],
                                LOG          => 'no'
                              },
           ClientTrPlanS   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientTrPlan', 
                                DETAILID     => 'TrPlanID',
                                LOG          => 'no'
                              },
           ClientTrPlanPG  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientTrPlan', 
                                DETAILID     => 'TrPlanID',
                                DETAILTABLES => ['ClientTrPlanOBJ'],
                                LOG          => 'no'
                              },
           ClientTrPlanOBJ => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientTrPlanPG', 
                                DETAILID     => 'TrPlanPGID',
                                LOG          => 'no'
                              },
           ClientVaccines  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientMHProblems => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCANS       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCATS       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCSSRS       => { RECID       => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCSSRSs      => { RECID       => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCSSRSt      => { RECID       => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientDCGD       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientODAS       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientODAS2017   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientOOWS       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientPCL5       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientPCLC       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientMHSF       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientMMSE      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientSMFQ       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientPHQ        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => 'TestDate desc'
                              },
          ClientPHQBrief   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => 'TestDate desc'
                              },
          ClientPHQSADS    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => 'TestDate desc'
                              },
          ClientPHQ2       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientPHQ4       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
          ClientPHQ9       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientTPHQ9      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientPHQ15      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientSBIRT      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCRAFFT     => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientAUDIT      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientAUDITC      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientCDCHA      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
          ClientTCUDS      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientProcedures=> { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientSAAlcohol => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientSATobacco => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientHealth    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientDevl      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientEDocs     => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientDischarge => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['ClientDischargeCDC'],
                                LOG          => 'no'
                              },
        ClientDischargeCDC => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientDischarge', 
                                DETAILID     => 'ClientDischargeID',
                                DETAILTABLES => ['ClientDischargeCDCSent'],
                                LOG          => 'no'
                              },
  ClientDischargeCDCSent   => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'ClientDischargeCDC', 
                                DETAILID     => 'ClientDischargeCDCID',
                                LOG          => 'no'
                              },
           ClientReview    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           Gambling        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           ClientGDS       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientGDSS      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientGDSL      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           GuardianHistory => { RECID        => 'GrdnID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           Hospital        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientIncome    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientCARSReview=> { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           ClientJournals  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           MedHx           => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           MentalStat      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           PDMed           => { RECID        => 'PDMedID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           PDPsyStat       => { RECID        => 'PsyStatID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                SORT         => ''
                              },
           SAbuse          => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
           Treatment       => { RECID        => 'TrID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['NoteTrans','ProgNotes','PhysNotes','TFCNotes','TFCTimes','ClientTherapyNotes','ClientNoteAmendments','ClientNoteProblems','ClientNoteTrPlanPG','NoteMeds','ClientNoteFamilyI','ClientNoteFamilyP','ProgNotesLog','PhysNotesLog'],
                                LOG          => 'no'
                              },
           NoteTrans       => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'TrID',
                                LOG          => 'no'
                              },
           ProgNotes       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                LOG          => 'no'
                              },
           ProgNotesLog    => { RECID        => 'LogID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                LOG          => 'no'
                              },
           TFCNotes        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                SORT         => ''
                              },
           TFCTimes        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                SORT         => ''
                              },
           PhysNotes       => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                LOG          => 'no'
                              },
           PhysNotesLog    => { RECID        => 'LogID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                LOG          => 'no'
                              },
     ClientTherapyNotes    => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                LOG          => 'no'
                              },
      ClientNoteAmendments => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'TrID',
                                LOG          => 'no'
                              },
        ClientNoteProblems => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'TrID',
                                LOG          => 'no'
                              },
        ClientNoteTrPlanPG => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'TrID',
                                LOG          => 'no'
                              },
        ClientNoteFamilyI  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'TrID',
                                LOG          => 'no'
                              },
        ClientNoteFamilyP  => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'TrID',
                                LOG          => 'no'
                              },
           NoteMeds        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Treatment', 
                                DETAILID     => 'NoteID',
                                LOG          => 'no'
                              },
           Invoices        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                DETAILTABLES => ['InvItems'],
                                LOG          => 'no'
                              },
           InvItems        => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Invoices', 
                                DETAILID     => 'InvID',
                                LOG          => 'no'
                              },
           xAxis1          => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           xGend           => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           xInsurance      => { RECID        => 'ID',
                                ACCESS       => 'Privilege=SiteAdmin',
                                DETAILTABLES => ['xSC'],
                                LOG          => 'no'
                              },
           xSC             => { RECID        => 'SCID',
                                ACCESS       => 'Privilege=AdminTables',
                                HEADERTABLE  => 'xInsurance', 
                                DETAILID     => 'InsID',
                                DETAILTABLES => ['xSCRates'],
                                LOG          => 'no'
                              },
           xSCRates        => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                HEADERTABLE  => 'xSC', 
                                DETAILID     => 'SCID',
                                LOG          => 'no'
                              },
           xSchools        => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           xSCRestrictions => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           xNPI            => { RECID        => 'NPI',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           npidata         => { RECID        => 'NPI',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           xReports        => { RECID        => 'ID',
                                ACCESS       => 'Privilege=Agent',
                                DBCFGNAME    => 'okmis_config',
                                LOG          => 'no'
                              },
           xRelationship   => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           xTables         => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                DETAILTABLES => ['xTableFields'],
                                DBCFGNAME    => 'okmis_config',
                                LOG          => 'no'
                              },
           xTableFields    => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                HEADERTABLE  => 'xTables', 
                                DETAILID     => 'TableID',
                                DBCFGNAME    => 'okmis_config',
                                LOG          => 'no'
                              },
           xNS             => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                DETAILTABLES => ['xPG'],
                                DBCFGNAME    => 'okmis_config',
                                LOG          => 'no'
                              },
           xPG             => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                HEADERTABLE  => 'xNS', 
                                DETAILID     => 'NSID',
                                DETAILTABLES => ['xOBJ'],
                                DBCFGNAME    => 'okmis_config',
                                LOG          => 'no'
                              },
           xOBJ            => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                HEADERTABLE  => 'xPG', 
                                DETAILID     => 'PGID',
                                DBCFGNAME    => 'okmis_config',
                                LOG          => 'no'
                              },
           EFT             => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           Notes2Print     => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           HCFA2Print      => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
           ClientMail      => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              },
                 xTaxonomy => { RECID        => 'ID',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
         xOccupationSnomed => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
         xDocumentOntology => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
    xLoincDocumentOntology => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
                      xLDO => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
   xLDOSubjectMatterDomain => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
                  xLDORole => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
               xLDOSetting => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
         xLDOTypeOfService => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
                  xLDOKind => { RECID        => 'Code',
                                ACCESS       => 'Privilege=AdminTables',
                                LOG          => 'no'
                              },
      ClientOpioidRegistry => { RECID        => 'ID',
                                ACCESS       => 'hasClientAccess',
                                HEADERTABLE  => 'Client', 
                                DETAILID     => 'ClientID',
                                LOG          => 'no'
                              }
);
our %SCREENS = (
      ListMisEDocs         => { SSELECT      => qq|select ProviderEDocs.*, DATE_FORMAT(ProviderEDocs.CreateDate,'%m/%d/%Y') as CreateDate, CONCAT(DATE_FORMAT(ProviderEDocs.RecDOLC,'%Y%m%d'),' ',TIME_FORMAT(TIME(ProviderEDocs.RecDOLC),'%H%i')) as ChangeDateTime, xEDocTags.Tag from ProviderEDocs left join okmis_config.xEDocTags on xEDocTags.ID=ProviderEDocs.Type where ProviderEDocs.ProvID='_MAINSELECTID_' order by xEDocTags.Tag |,
                                SHEADER      => ['ID:center','Tag:center:::default','Title:left:::default','ChangeDateTime:center:::numeric','CreateDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'ProviderEDocs',
                                STITLE       => 'Millennium Electronic Forms / Links / Electronic Documents',
                                SADDNEW      => 'view=MisEDocs.cgi',
                                Bedit        => 'view=MisEDocs.cgi',
                                SUBLIST      => []
                              },
      ListInsurance        => { SSELECT      => qq|select xInsurance.*, DATE_FORMAT(xInsurance.CreateDate,'%m/%d/%Y') as CreateDate from xInsurance order by xInsurance.Active desc, xInsurance.ClearingHouse, xInsurance.PayID, xInsurance.Name|,
                                SHEADER      => ['Active:centerflag','ClearingHouse:left','PayID:center','Descr:left','Name:left','MgrFName:left','MgrLName:left','Ph1:left::Phone','Fax:left','edit:center:BE:none'],
                                STABLE       => 'xInsurance',
                                STITLE       => 'Insurance Listing',
                                SADDNEW      => 'view=xInsurance.cgi',
                                Bedit        => 'view=xInsurance.cgi',
                                SUBLIST      => []
                              },
         ListxSC           => { SSELECT      => qq|select xSC.*, DATE_FORMAT(xSC.CreateDate,'%m/%d/%Y') as CreateDate, xCredentials.Descr as Cred, xSCRestrictions.Descr as Rest, xPOS.Descr as POS from xSC left join okmis_config.xCredentials on xCredentials.ID=xSC.CredID left join okmis_config.xSCRestrictions on xSCRestrictions.ID=xSC.Restriction left join okmis_config.xPOS on xPOS.ID=xSC.POS where xSC.InsID='_MAINSELECTID_' order by xSC.Active desc,xSC.SCNum,xSC.SCName|,
                                SHEADER      => ['Active:center','SCNum:left','SCName:left','ServiceType:center','Cred:center','Rest:center','Type:center','PAReq:centerflag','POS:center','ExInv:center','edit:center:BE:none'],
                                STABLE       => 'xSC',
                                STITLE       => 'Service Codes',
                                SADDNEW      => 'view=xSC.cgi',
                                Bedit        => 'view=xSC.cgi',
                                SUBLIST      => []
                              },
         ListxSCRates      => { SSELECT      => qq|select xSCRates.*, DATE_FORMAT(xSCRates.EffDate,'%m/%d/%Y') as EffectiveDate, DATE_FORMAT(xSCRates.ExpDate,'%m/%d/%Y') as ExpireDate  from xSCRates where xSCRates.SCID='_MAINSELECTID_' order by xSCRates.EffDate desc,xSCRates.ExpDate|,
                                SHEADER      => ['ServiceRate:right','HrsPerUnit:left','UnitLbl:left','RVUPct:center','EffectiveDate:center','ExpireDate:center','edit:center:BE:none'],
                                STABLE       => 'xSCRates',
                                STITLE       => 'Service Codes Rates<BR><B>PAST / CURRENT PAY RATES FOR SERVICE CODE</B> (current rate is when Expires is null)',
                                SADDNEW      => 'view=xSCRates.cgi',
                                Bedit        => 'view=xSCRates.cgi',
                                SUBLIST      => []
                              },
      ListSiteMessages     => { SSELECT      => qq|select xMessages.*, DATE_FORMAT(xMessages.EffDate,'%m/%d/%Y') as EffectiveDate, DATE_FORMAT(xMessages.ExpDate,'%m/%d/%Y') as ExpireDate from xMessages where xMessages.ProvID='_MAINSELECTID_' order by xMessages.EffDate, xMessages.ExpDate|,
                                SHEADER      => ['Message:left','EffectiveDate:center:::date','ExpireDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'xMessages',
                                STITLE       => 'Site Message List',
                                SADDNEW      => 'view=xMessages.cgi',
                                Bedit        => 'view=xMessages.cgi',
                                SUBLIST      => []
                              },
      ListSiteProjects     => { SSELECT      => qq|select Projects.*, DATE_FORMAT(Projects.EffDate,'%m/%d/%Y') as EffectiveDate, DATE_FORMAT(Projects.ExpDate,'%m/%d/%Y') as ExpireDate from Projects where Projects.ProvID='_MAINSELECTID_' order by Projects.EffDate, Projects.ExpDate, Projects.Priority, Projects.Type|,
                                SHEADER      => ['Priority:center','Type:center','Subject:left','ReqBy:center::Requested By','EffectiveDate:center:::date','ExpireDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'Projects',
                                STITLE       => 'Site Projects List',
                                SADDNEW      => 'view=xProjects.cgi',
                                Bedit        => 'view=xProjects.cgi',
                                SUBLIST      => []
                              },
      ListProviderEDocs => { SSELECT      => qq|select ProviderEDocs.*, DATE_FORMAT(ProviderEDocs.CreateDate,'%m/%d/%Y') as CreateDate, xEDocTags.Tag, Provider.LName as Provider from ProviderEDocs left join Provider on Provider.ProvID=ProviderEDocs.CreateProvID left join okmis_config.xEDocTags on xEDocTags.ID=ProviderEDocs.Type where ProviderEDocs.ProvID='_MAINSELECTID_' order by xEDocTags.Tag|,
                                SHEADER      => ['CreateDate:center:::date','Tag:left::Type:default','Title:left:::default','Descr:left::Decription:default','Provider:left:::default','Public:centerflag','Path:center:BD:display','edit:center:BE:none'],
                                STABLE       => 'ProviderEDocs',
                                STITLE       => 'Provider Electronic Documents',
                                SADDNEW      => 'view=ProviderUpload.cgi',
                                Bedit        => 'view=ProviderEDocs.cgi',
                                SUBLIST      => []
                              },
       ListProviderCDAparms=> { SSELECT        => qq|select ProviderCDAparms.*, DATE_FORMAT(ProviderCDAparms.CreateDate,'%m/%d/%Y') as CreateDate, ProviderCDAparms.Priority from ProviderCDAparms where ProviderCDAparms.ProvID='_MAINSELECTID_' order by ProviderCDAparms.Priority |,
                                SHEADER        => ['Priority:center:BO:order','Descr:left','Visible:centerflag:BT','Exclude:centerflag'],
                                STABLE         => 'ProviderCDAparms',
                                STITLE         => 'CDA Parameters',
                                SUBLIST        => []
                              },
         ListxTables       => { SSELECT      => qq|select xTables.*, DATE_FORMAT(xTables.CreateDate,'%m/%d/%Y') as CreateDate from okmis_config.xTables order by xTables.Active desc,xTables.theTable|,
                                SHEADER      => ['Active:center','theTable:left::Table','Descr:left','CreateDate:center','Duplicate:center:BE:none','edit:center:BE:none'],
                                STABLE       => 'xTables',
                                STITLE       => 'MIS Tables',
                                SADDNEW      => 'view=xTablesInp.cgi',
                                Bedit        => 'view=xTablesInp.cgi',
                                BDuplicate   => 'view=xTablesDup.cgi:Duplicate',
                                SUBLIST      => []
                              },
         ListxTableFields  => { SSELECT      => qq|select xTableFields.*, DATE_FORMAT(xTableFields.CreateDate,'%m/%d/%Y') as CreateDate from okmis_config.xTableFields where xTableFields.TableID='_MAINSELECTID_'order by xTableFields.theSeq|,
                                SHEADER      => ['theSeq:right::Seq','theField:left','theType:left','thePreText:left::Pre-Text','theText:left::Text','thePostText:left::Post-Text','theValues:left','descriptors:left','onchange:left','edit:center:BE:none'],
                                STABLE       => 'xTableFields',
                                STITLE       => 'MIS DB Tables Input Generator',
                                SADDNEW      => 'view=xTableFieldsInp.cgi',
                                Bedit        => 'view=xTableFieldsInp.cgi',
                                SUBLIST      => []
                              },
         ListxNS           => { SSELECT      => qq|select xNS.*, DATE_FORMAT(xNS.CreateDate,'%m/%d/%Y') as CreateDate from okmis_config.xNS order by xNS.Active desc,xNS.Descr|,
                                SHEADER      => ['Active:centerflag','ID:left','Descr:left::Description','CreateDate:center','edit:center:BE:none'],
                                STABLE       => 'xNS',
                                STITLE       => 'Needs and Skills',
                                SADDNEW      => 'view=xNS.cgi',
                                Bedit        => 'view=xNS.cgi',
                                SUBLIST      => []
                              },
         ListxPG           => { SSELECT      => qq|select xPG.*, DATE_FORMAT(xPG.CreateDate,'%m/%d/%Y') as CreateDate from okmis_config.xPG where xPG.NSID='_MAINSELECTID_'order by xPG.Num|,
                                SHEADER      => ['Num:right','Problem:left','Goal:left','CreateDate:center','edit:center:BE:none'],
                                STABLE       => 'xPG',
                                STITLE       => 'Problems and Goals',
                                SADDNEW      => 'view=xPG.cgi',
                                Bedit        => 'view=xPG.cgi',
                                SUBLIST      => []
                              },
         ListxOBJ           => { SSELECT      => qq|select xOBJ.*, DATE_FORMAT(xOBJ.CreateDate,'%m/%d/%Y') as CreateDate from okmis_config.xOBJ where xOBJ.PGID='_MAINSELECTID_' order by xOBJ.Num|,
                                SHEADER      => ['Num:right','Descr:left::Description','CreateDate:center','edit:center:BE:none'],
                                STABLE       => 'xOBJ',
                                STITLE       => 'Objectives for Problem/Goal',
                                SADDNEW      => 'view=xOBJ.cgi',
                                Bedit        => 'view=xOBJ.cgi',
                                SUBLIST      => []
                              },
      ListClientACE        => { SSELECT      => qq|select ClientACE.*, DATE_FORMAT(ClientACE.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientACE.TestDate,'%m/%d/%Y') as TestDate, ClientACE.q10 as Difficulty from ClientACE where ClientACE.ClientID='_MAINSELECTID_' order by ClientACE.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Score:center:FS:ACE Score:default','edit:center:BE:none'],
                                STABLE       => 'ClientACE',
                                STITLE       => 'Adverse Childhood Experience (ACE)',
                                SADDNEW      => 'view=ClientACEInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FScore       => 'uCalc->calcTotal(%form+%record+q+1+10)return0',
                                Bedit        => 'view=ClientACEInp.cgi',
                                SUBLIST      => []
                              },
      ListClientBasis32    => { SSELECT      => qq|select ClientBasis32.*, DATE_FORMAT(ClientBasis32.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientBasis32.EffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(ClientBasis32.ExpDate,'%m/%d/%Y') as ExpDate from ClientBasis32 where ClientBasis32.ClientID='_MAINSELECTID_' order by ClientBasis32.EffDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','Relation:center:FS:Relation to Self / Others:default','DailyLiving:center:FS:Daily Living / Role Functioning:default','Depression:center:FS:Depression / Anxiety:default','Impulsive:center:FS:Impulsive / Addictive:default','Psychosis:center:FS:Psychosis:default','EffDate:center:::date','ExpDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'ClientBasis32',
                                STITLE       => 'Behavior and Symptom Identification Scale (BASIS-32)',
                                SADDNEW      => 'view=ClientBasis32Inp.cgi',
                                SADDHTML     => 'gHTML->htmB32(%form)',
                                Bprint       => 'PrintBasis32',
                                FRelation    => 'uCalc->setB32(%form+%record+1)return0',
                                FDailyLiving => 'uCalc->setB32(%form+%record+2)return0',
                                FDepression  => 'uCalc->setB32(%form+%record+3)return0',
                                FImpulsive   => 'uCalc->setB32(%form+%record+4)return0',
                                FPsychosis   => 'uCalc->setB32(%form+%record+5)return0',
                                Bedit        => 'view=ClientBasis32Inp.cgi',
                                SUBLIST      => []
                              },
       ListClientProblems  => { SSELECT        => qq|select ClientProblems.*,misICD10.ICD10, misICD10.icdName, misICD10.SNOMEDID, misICD10.sctName, DATE_FORMAT(ClientProblems.InitiatedDate,'%m/%d/%Y') as InitiatedDate, DATE_FORMAT(ClientProblems.ResolvedDate,'%m/%d/%Y') as ResolvedDate, ClientProblems.Priority from ClientProblems left join okmis_config.misICD10 on misICD10.ID = ClientProblems.UUID where ClientProblems.ClientID='_MAINSELECTID_' order by ClientProblems.Priority |,
                                SHEADER        => ['ICD10:left','icdName:left','SNOMEDID:center','sctName:left','InitiatedDate:center:FM','ResolvedDate:center','Priority:center:BO:order','Comments:left::Notes','edit:center:BE:none'],
                                STABLE         => 'ClientProblems',
                                STITLE         => 'Client Problems',
                                SADDNEW        => 'view=ClientProblemsInp.cgi',
                                FInitiatedDate => 'DBA->listNoteProblems(%form+_FLDID_)',
                                Bedit          => 'view=ClientProblemsInp.cgi',
                                SUBLIST        => []
                              },
       ShowClientProblems  => { SSELECT        => qq|select ClientProblems.ID,ClientProblems.Locked,misICD10.ICD10, misICD10.icdName, misICD10.sctName, DATE_FORMAT(ClientProblems.InitiatedDate,'%m/%d/%Y') as InitiatedDate, DATE_FORMAT(ClientProblems.ResolvedDate,'%m/%d/%Y') as ResolvedDate, ClientProblems.Priority from ClientProblems left join okmis_config.misICD10 on misICD10.ID = ClientProblems.UUID where ClientProblems.ClientID='_MAINSELECTID_' order by ClientProblems.Priority |,
                                SHEADER        => ['ICD10:left','icdName:left','sctName:left','InitiatedDate:center','ResolvedDate:center'],
                                STABLE         => 'ClientProblems',
                                STITLE         => 'Client Problems',
                                SUBLIST        => []
                              },
       ListClientTrPlan    => { SSELECT      => qq|select ClientTrPlan.ID, ClientTrPlan.Locked, xTrPlanType.Descr as Type, ClientTrPlan.SA1 as Strength, ClientTrPlan.L1 as Liability, DATE_FORMAT(ClientTrPlan.EffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(ClientTrPlan.ExpDate,'%m/%d/%Y') as ExpDate, ClientTrPlan.Priority from ClientTrPlan left join okmis_config.xTrPlanType on xTrPlanType.ID=ClientTrPlan.Type where ClientTrPlan.ClientID='_MAINSELECTID_' order by ClientTrPlan.EffDate desc, ClientTrPlan.ExpDate desc LIMIT 5|,
                                SHEADER      => ['Type:left:BP','EffDate:center:FM','ExpDate:center','Strength:left','Liability:left','edit:center:BE:none'],
                                STABLE       => 'ClientTrPlan',
                                STITLE       => 'Treatment Plans',
                                STABS        => 'yes',
                                SADDNEW      => 'view=ClientTrPlanInp.cgi',
                                BType        => 'printClientTrPlan::Click to print Treatment Plan',
                                FEffDate     => 'DBA->listNoteTrPlan(%form+_FLDID_)',
                                Bedit        => 'view=ClientTrPlanInp.cgi',
                                SUBLIST      => ['ListClientTrPlanPG','ListClientTrPlanS']
                              },
       ListClientTrPlanALL => { SSELECT      => qq|select ClientTrPlan.ID, ClientTrPlan.Locked, xTrPlanType.Descr as Type, ClientTrPlan.SA1 as Strength, ClientTrPlan.L1 as Liability, DATE_FORMAT(ClientTrPlan.EffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(ClientTrPlan.ExpDate,'%m/%d/%Y') as ExpDate, ClientTrPlan.Priority from ClientTrPlan left join okmis_config.xTrPlanType on xTrPlanType.ID=ClientTrPlan.Type where ClientTrPlan.ClientID='_MAINSELECTID_' order by ClientTrPlan.EffDate desc, ClientTrPlan.ExpDate desc|,
                                SHEADER      => ['Type:left:BP','EffDate:center:FM','ExpDate:center','Strength:left','Liability:left','edit:center:BE:none'],
                                STABLE       => 'ClientTrPlan',
                                STITLE       => 'Treatment Plans',
                                STABS        => 'no',
                                SADDNEW      => 'view=ClientTrPlanInp.cgi',
                                BType        => 'printClientTrPlan::Click to print Treatment Plan',
                                FEffDate     => 'DBA->listNoteTrPlan(%form+_FLDID_)',
                                Bedit        => 'view=ClientTrPlanInp.cgi',
                                SUBLIST      => ['ListClientTrPlanPG','ListClientTrPlanS']
                              },
       ListClientTrPlanS   => { SSELECT      => qq|select ClientTrPlanS.ID, ClientTrPlanS.TrPlanID, CONCAT_WS(' ',Provider.FName,Provider.LName) as Provider, DATE_FORMAT(ClientTrPlanS.SignDate,'%m/%d/%Y') as SignDate, TIME_FORMAT(ClientTrPlanS.SignTime,'%H:%I') as SignTime, ClientTrPlanS.Priority from ClientTrPlanS left join Provider on Provider.ProvID=ClientTrPlanS.ProvID where ClientTrPlanS.TrPlanID='_MAINSELECTID_' order by ClientTrPlanS.Priority|,
                                SHEADER      => ['Provider:center:F','SignDate:center','SignTime:center'],
                                STABLE       => 'ClientTrPlanS',
                                STITLE       => 'Treatment Plan Signatures',
                                SDATA1       => 'DBA->isTrPlanSigned(%form+_MAINID_+_TABNUM_+_LINKS_)', # or substitute _FLD1_,_FLD2_,etc from   %record->_FLDx_
                                SDATA1FLDS   => '',         # the 3 above are always substituted, plus defined fields ^^ what is set in DATAFLDS for ^^
                                FProvider    => 'DBA->allowDelTrPlanS(%form+_FLDID_+_TABNUM_+_LINKS_)',
                                SUBLIST      => []
                              },
       ListClientTrPlanPG  => { SSELECT      => qq|select ClientTrPlanPG.ID, ClientTrPlanPG.Locked, xNS.Descr as NeedSkill, ClientTrPlanPG.Prob, ClientTrPlanPG.Goal, DATE_FORMAT(ClientTrPlanPG.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientTrPlanPG.ChangeDate,'%m/%d/%Y') as ChangeDate, ClientTrPlanPG.Priority,ClientTrPlanPG.Priority DIV 10 as Num from ClientTrPlanPG left join okmis_config.xNS on xNS.ID=ClientTrPlanPG.NeedSkill where ClientTrPlanPG.TrPlanID='_MAINSELECTID_' order by ClientTrPlanPG.Priority|,
                                SHEADER      => ['Num:center','NeedSkill:left','Prob:left','Goal:left','Priority:center:BO:order','edit:center:BE:none'],
                                STABLE       => 'ClientTrPlanPG',
                                STITLE       => 'Treatment Plan Problems/Goals',
                                SADDNEW      => 'view=ClientTrPlanPGInp.cgi',
                                Bedit        => 'view=ClientTrPlanPGInp.cgi',
                                SUBLIST      => []
                              },
       ListClientTrPlanOBJ => { SSELECT      => qq|select ClientTrPlanOBJ.ID, ClientTrPlanOBJ.Locked, ClientTrPlanOBJ.Obj, DATE_FORMAT(ClientTrPlanOBJ.InitiatedDate,'%m/%d/%Y') as InitiatedDate, DATE_FORMAT(ClientTrPlanOBJ.TargetDate,'%m/%d/%Y') as TargetDate, DATE_FORMAT(ClientTrPlanOBJ.ResolvedDate,'%m/%d/%Y') as ResolvedDate, ClientTrPlanOBJ.Priority, ClientTrPlanOBJ.Priority DIV 10 as Num from ClientTrPlanOBJ where ClientTrPlanOBJ.TrPlanPGID='_MAINSELECTID_' order by ClientTrPlanOBJ.Priority|,
                                SHEADER      => ['Num:center','Obj:left::Objective','InitiatedDate:center','TargetDate:center','ResolvedDate:center','Priority:center:BO:order','edit:center:BE:none'],
                                STABLE       => 'ClientTrPlanOBJ',
                                STITLE       => 'Treatment Plan Objectives',
                                SADDNEW      => 'view=ClientTrPlanOBJInp.cgi',
                                Bedit        => 'view=ClientTrPlanOBJInp.cgi',
                                Blockededit  => 'view=ClientTrPlanOBJInp2.cgi:Resolve',
                                SUBLIST      => []
                              },
      ListClientPHQ        => { SSELECT      => qq|select ClientPHQ.*, DATE_FORMAT(ClientPHQ.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQ.TestDate,'%m/%d/%Y') as TestDate from ClientPHQ where ClientPHQ.ClientID='_MAINSELECTID_' order by ClientPHQ.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','SomatoformDisorder:center:FS:Somatoform Disorder:numeric','Depressive:center:FS:Depressive Syndrome:default','Panic:center:FS:Panic Syndrome:numeric','Anxiety:center:FS:Anxiety Syndrome:numeric','BulimiaNervosa:center:FS:Bulimia Nervosa:numeric','BingeEatingDisorder:center:FS:Binge Eating Disorder:numeric','AlcoholAbuse:center:FS:Alcohol Abuse:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPHQ',
                                STITLE       => 'Patient Health Questionaire - (PHQ)',
                                SADDNEW      => 'view=ClientPHQInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FSomatoformDisorder => 'uCalc->flagSomatoform(%form+%record+q1+a+m)return0',
                                FDepressive  => 'uCalc->flagCountLabel(%form+%record+q2+a+i+ok)return0',
                                FPanic       => 'uCalc->phqPanicSyndrome(%form+%record)return0',
                                FAnxiety     => 'uCalc->phqAnxietySyndrome(%form+%record)return0',
                                FBulimiaNervosa => 'uCalc->phqBulimiaNervosa(%form+%record)return0',
                                FBingeEatingDisorder => 'uCalc->phqBingeEatingDisorder(%form+%record)return0',
                                FAlcoholAbuse => 'uCalc->phqAlcoholAbuse(%form+%record)return0',
                                Bedit        => 'view=ClientPHQInp.cgi',
                                SUBLIST      => []
                              },
      ListClientPHQBrief   => { SSELECT      => qq|select ClientPHQBrief.*, DATE_FORMAT(ClientPHQBrief.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQBrief.TestDate,'%m/%d/%Y') as TestDate, ClientPHQBrief.q3 as Difficulty, ClientPHQBrief.q5 as PhysicallyHurt, ClientPHQBrief.q7 as Medications from ClientPHQBrief where ClientPHQBrief.ClientID='_MAINSELECTID_' order by ClientPHQBrief.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Problems2:center:FS:Problems Last 2 Weeks:numeric','Anxiety:center:FS::numeric','Difficulty:center:FS::numeric','Problems4:center:FS:Problems Last 4 Weeks:numeric','PhysicallyHurt:centerflag::Physically Hurt:default','Medications:centerflag:::default','WomenOnly:center:FS:Women Only:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPHQBrief',
                                STITLE       => 'Patient Health Questionaire - (Brief)',
                                SADDNEW      => 'view=ClientPHQBriefInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FProblems2 => 'uCalc->flagTotal(%form+%record+q1+a+i+5+10+15)return0',
                                FAnxiety => 'uCalc->flagTotal(%form+%record+q2+a+e+5+10+15)return0',
                                FDifficulty => 'uCalc->flagTotal(%form+%record+q3+++5+10+15)return0',
                                FProblems4 => 'uCalc->flagTotal(%form+%record+q4+a+j+5+10+15)return0',
                                FWomenOnly => 'uCalc->flagTotal(%form+%record+q8+a+f+5+10+15)return0',
                                Bedit        => 'view=ClientPHQBriefInp.cgi',
                                SUBLIST      => []
                              },
      ListClientPHQSADS    => { SSELECT      => qq|select ClientPHQSADS.*, DATE_FORMAT(ClientPHQSADS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQSADS.TestDate,'%m/%d/%Y') as TestDate from ClientPHQSADS where ClientPHQSADS.ClientID='_MAINSELECTID_' order by ClientPHQSADS.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Problems4:center:FS:Problems Past 4 Weeks:numeric','Problems2B:center:FS:Problems Last 2 Weeks (B):numeric','Anxiety:center:FS::numeric','Problems2D:center:FS:Problems Last 2 Weeks (D):numeric','Difficulty:center:FS::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPHQSADS',
                                STITLE       => 'Somatic Anxiety and Depressive Symptoms - (SADS)',
                                SADDNEW      => 'view=ClientPHQSADSInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FProblems4 => 'uCalc->flagTotal(%form+%record+qA+1+15+5+10+15)return0',
                                FProblems2B => 'uCalc->flagTotal(%form+%record+qB+1+7+5+10+15)return0',
                                FAnxiety => 'uCalc->flagTotal(%form+%record+qC+1+5+5+10+15)return0',
                                FProblems2D => 'uCalc->flagTotal(%form+%record+qD+1+9+5+10+15)return0',
                                FDifficulty => 'uCalc->flagTotal(%form+%record+qE+++5+10+15)return0',
                                Bedit        => 'view=ClientPHQSADSInp.cgi',
                                SUBLIST      => []
                              },
      ListClientPHQ2       => { SSELECT      => qq|select ClientPHQ2.ID, ClientPHQ2.Locked, DATE_FORMAT(ClientPHQ2.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQ2.TestDate,'%m/%d/%Y') as TestDate, ClientPHQ2.q1 as Interest, ClientPHQ2.q2 as Depressed from ClientPHQ2 where ClientPHQ2.ClientID='_MAINSELECTID_' order by ClientPHQ2.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Anxious:center:::numeric','Worrying:center:::numeric','Interest:center:::numeric','Depressed:center:::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPHQ2',
                                STITLE       => 'Patient Health Questionaire - 2',
                                SADDNEW      => 'view=ClientPHQ2Inp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bedit        => 'view=ClientPHQ2Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientPHQ4       => { SSELECT      => qq|select ClientPHQ4.ID, ClientPHQ4.Locked, DATE_FORMAT(ClientPHQ4.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQ4.TestDate,'%m/%d/%Y') as TestDate, ClientPHQ4.q1 as Anxious, ClientPHQ4.q2 as Worrying, ClientPHQ4.q3 as Interest, ClientPHQ4.q4 as Depressed from ClientPHQ4 where ClientPHQ4.ClientID='_MAINSELECTID_' order by ClientPHQ4.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Anxious:center:::numeric','Worrying:center:::numeric','Interest:center:::numeric','Depressed:center:::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPHQ4',
                                STITLE       => 'Patient Health Questionaire - 4',
                                SADDNEW      => 'view=ClientPHQ4Inp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bedit        => 'view=ClientPHQ4Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientPHQ9       => { SSELECT      => qq|select ClientPHQ9.*, DATE_FORMAT(ClientPHQ9.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQ9.TestDate,'%m/%d/%Y') as TestDate, ClientPHQ9.q10 as Difficulty from ClientPHQ9 where ClientPHQ9.ClientID='_MAINSELECTID_' order by ClientPHQ9.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Difficulty:centerflag:::default','Depression:center:FS::default','Disorder:center:FS:Consider Disorder:default','edit:center:BE:none'],
                                STABLE       => 'ClientPHQ9',
                                STITLE       => 'Patient Health Questionaire - 9',
                                SADDNEW      => 'view=ClientPHQ9Inp.cgi',
                                Bprint       => 'printClientPHQ',
                                FDepression  => 'uCalc->flagTotalLabel(%form+%record+q+1+9+5+10+15+20)return0',
                                FDisorder    => 'uCalc->flagCountLabel(%form+%record+q+1+9)return0',
                                Bedit        => 'view=ClientPHQ9Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientTPHQ9      => { SSELECT      => qq|select ClientTPHQ9.*, DATE_FORMAT(ClientTPHQ9.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientTPHQ9.TestDate,'%m/%d/%Y') as TestDate, ClientTPHQ9.q10 as Depressed, ClientTPHQ9.q11 as Difficulty, ClientTPHQ9.q12 as SuicidePastMonth, ClientTPHQ9.q13 as SuicideEver from ClientTPHQ9 where ClientTPHQ9.ClientID='_MAINSELECTID_' order by ClientTPHQ9.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Depressed:centerflag:::default','Difficulty:center:::default','SuicidePastMonth:centerflag::Suicide Past Month:numeric','SuicideEver:centerflag::Suicide Ever:default','Depression:center:FS::default','Disorder:center:FS:Consider Disorder:default','edit:center:BE:none'],
                                STABLE       => 'ClientTPHQ9',
                                STITLE       => 'PHQ-9 Modified for Teens',
                                SADDNEW      => 'view=ClientTPHQ9Inp.cgi',
                                Bprint       => 'printClientPHQ',
                                FDepression  => 'uCalc->flagTotalLabel(%form+%record+q+1+13+5+10+15+20)return0',
                                FDisorder    => 'uCalc->flagCountLabel(%form+%record+q+1+13)return0',
                                Bedit        => 'view=ClientTPHQ9Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientPHQ15      => { SSELECT      => qq|select ClientPHQ15.*, DATE_FORMAT(ClientPHQ15.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPHQ15.TestDate,'%m/%d/%Y') as TestDate from ClientPHQ15 where ClientPHQ15.ClientID='_MAINSELECTID_' order by ClientPHQ15.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Problems4:center:FS:Problems Past 4 Weeks:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPHQ15',
                                STITLE       => 'Patient Health Questionaire - 15',
                                SADDNEW      => 'view=ClientPHQ15Inp.cgi',
                                Bprint       => 'printClientPHQ',
                                FProblems4   => 'uCalc->flagTotal(%form+%record+q+1+15+5+10+15)return0',
                                Bedit        => 'view=ClientPHQ15Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientGAD7       => { SSELECT      => qq|select ClientGAD7.*, DATE_FORMAT(ClientGAD7.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientGAD7.TestDate,'%m/%d/%Y') as TestDate from ClientGAD7 where ClientGAD7.ClientID='_MAINSELECTID_' order by ClientGAD7.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Problems2:center:FS:Problems Last 2 Weeks:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientGAD7',
                                STITLE       => 'Generalized Anxiety Disorder - 7',
                                SADDNEW      => 'view=ClientGAD7Inp.cgi',
                                Bprint       => 'printClientPHQ',
                                FProblems2   => 'uCalc->flagTotal(%form+%record+q+1+7+5+10+15)return0',
                                Bedit        => 'view=ClientGAD7Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientPCL5       => { SSELECT      => qq|select ClientPCL5.*, DATE_FORMAT(ClientPCL5.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPCL5.TestDate,'%m/%d/%Y') as TestDate from ClientPCL5 where ClientPCL5.ClientID='_MAINSELECTID_' order by ClientPCL5.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Bothered:center:FS:Bothered by:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPCL5',
                                STITLE       => 'PTSD Checklist for DSM-5 (PCL-5)',
                                SADDNEW      => 'view=ClientPCL5Inp.cgi',
                                Bprint       => 'PrintPHQ',
                                FBothered    => 'uCalc->flagTotal(%form+%record+q+1+20+5+10+15)return0',
                                Bedit        => 'view=ClientPCL5Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientSBIRT      => { SSELECT      => qq|select ClientSBIRT.*, DATE_FORMAT(ClientSBIRT.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientSBIRT.TestDate,'%m/%d/%Y') as TestDate from ClientSBIRT where ClientSBIRT.ClientID='_MAINSELECTID_' order by ClientSBIRT.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','q1:center','q2:center','q3:center','edit:center:BE:none'],
                                STABLE       => 'ClientSBIRT',
                                STITLE       => 'Screening, Brief Intervention, Referral to Treatment (SBIRT)',
                                SADDNEW      => 'view=ClientSBIRTInp.cgi',
                                Bprint       => 'PrintPHQ',
                                Bedit        => 'view=ClientSBIRTInp.cgi',
                                SUBLIST      => []
                              },
      ListClientSATobacco  => { SSELECT      => qq|select ClientSATobacco.*,DATE_FORMAT(ClientSATobacco.vdate,'%m/%d/%Y') as VisitDate,DATE_FORMAT(ClientSATobacco.StartDate,'%m/%d/%Y') as StartDate,DATE_FORMAT(ClientSATobacco.EndDate,'%m/%d/%Y') as EndDate,xSmokingStatus.Descr as SmokeStatus from ClientSATobacco left join okmis_config.xSmokingStatus on xSmokingStatus.ID=ClientSATobacco.SmokingStatus where ClientSATobacco.ClientID='_MAINSELECTID_' order by ClientSATobacco.vdate desc |,
                                SHEADER      => ['print:center:BP','VisitDate:center:::date','SmokeStatus:center','StartDate:center:::date','EndDate:center:::date','quit30:centerflag::Quit30','edit:center:BE:none'],
                                STABLE       => 'ClientSATobacco',
                                STITLE       => 'Substance Abuse Tobacco Screening',
                                SADDNEW      => 'view=ClientSATobaccoInp.cgi',
                                Bprint       => 'PrintClientSATobacco',
                                Bedit        => 'view=ClientSATobaccoInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCRAFFT     => { SSELECT      => qq|select ClientCRAFFT.*, DATE_FORMAT(ClientCRAFFT.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCRAFFT.TestDate,'%m/%d/%Y') as TestDate from ClientCRAFFT where ClientCRAFFT.ClientID='_MAINSELECTID_' order by ClientCRAFFT.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','q1:center','q2:center','q3:center','q4:center','q5:center','q6:center','edit:center:BE:none'],
                                STABLE       => 'ClientCRAFFT',
                                STITLE       => 'Substance-Related Risks and Problems in Adolescents (CRAFFT)',
                                SADDNEW      => 'view=ClientCRAFFTInp.cgi',
                                Bprint       => 'PrintPHQ',
                                Bedit        => 'view=ClientCRAFFTInp.cgi',
                                SUBLIST      => []
                              },
      ListClientAUDIT      => { SSELECT      => qq|select ClientAUDIT.*, DATE_FORMAT(ClientAUDIT.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientAUDIT.TestDate,'%m/%d/%Y') as TestDate from ClientAUDIT where ClientAUDIT.ClientID='_MAINSELECTID_' order by ClientAUDIT.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Audit:center:FS:Audit:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientAUDIT',
                                STITLE       => 'AUDIT (Alcohol Use Disorders Identification Test)',
                                SADDNEW      => 'view=ClientAUDITInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FAudit       => 'uCalc->calcAudit(%form+%record)return0',
                                Bedit        => 'view=ClientAUDITInp.cgi',
                                SUBLIST      => []
                              },
      ListClientAUDITC      => { SSELECT      => qq|select ClientAUDITC.*, DATE_FORMAT(ClientAUDITC.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientAUDITC.TestDate,'%m/%d/%Y') as TestDate from ClientAUDITC where ClientAUDITC.ClientID='_MAINSELECTID_' order by ClientAUDITC.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Audit:center:FS:Audit:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientAUDITC',
                                STITLE       => 'AUDIT-C (Alcohol Use Disorders Identification Test - Concise)',
                                SADDNEW      => 'view=ClientAUDITCInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FAudit       => 'uCalc->calcAuditC(%form+%record)return0',
                                Bedit        => 'view=ClientAUDITCInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCDCHA      => { SSELECT      => qq|select ClientCDCHA.*, DATE_FORMAT(ClientCDCHA.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCDCHA.TestDate,'%m/%d/%Y') as TestDate from ClientCDCHA where ClientCDCHA.ClientID='_MAINSELECTID_' order by ClientCDCHA.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','q1:center','q2:center','q3:center','edit:center:BE:none'],
                                STABLE       => 'ClientCDCHA',
                                STITLE       => 'Health Appraisal Questionaire Male / Female Version',
                                SADDNEW      => 'view=ClientCDCHAInp.cgi',
                                Bprint       => 'PrintPHQ',
                                Bedit        => 'view=ClientCDCHAInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCANS       => { SSELECT      => qq|select ClientCANS.*, DATE_FORMAT(ClientCANS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCANS.TestDate,'%m/%d/%Y') as TestDate from ClientCANS where ClientCANS.ClientID='_MAINSELECTID_' order by ClientCANS.TestDate desc |,
                                SHEADER      => ['print:center:BP:print','CreateDate:center:::date','TestDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'ClientCANS',
                                STITLE       => 'CHILD AND ADOLESCENT NEEDS AND STRENGTHS (CANS-MH)',
                                SADDNEW      => 'view=ClientCANSInp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bedit        => 'view=ClientCANSInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCATS       => { SSELECT      => qq|select ClientCATS.*, DATE_FORMAT(ClientCATS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCATS.TestDate,'%m/%d/%Y') as TestDate from ClientCATS where ClientCATS.ClientID='_MAINSELECTID_' order by ClientCATS.TestDate desc |,
                                SHEADER      => ['printYouth:center:BP:Youth','printCaregiver:center:BP:Caregiver','printScore:center:BP:Score','TestDate:center:::date','Stress:center:FS::numeric','Bothered:center:FS:Bothered by:numeric','Problems:center:FS::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientCATS',
                                STITLE       => 'Child and Adolescent Trauma Screen (CATS) Reports',
                                SADDNEW      => 'view=ClientCATSInp.cgi',
                                BprintYouth       => 'printClientPHQ:Youth',
                                BprintCaregiver => 'printClientPHQ:Caregiver',
                                BprintScore  => 'printClientPHQ:Score',
                                FStress      => 'uCalc->flagTotal(%form+%record+qA+1+15+5+10+15)return0',
                                FBothered    => 'uCalc->flagTotal(%form+%record+qB+1+20+5+10+15)return0',
                                FProblems    => 'uCalc->flagTotal(%form+%record+qC+1+5+5+10+15)return0',
                                Bedit        => 'view=ClientCATSInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCSSRS       => { SSELECT      => qq|select ClientCSSRS.*, DATE_FORMAT(ClientCSSRS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCSSRS.TestDate,'%m/%d/%Y') as TestDate from ClientCSSRS where ClientCSSRS.ClientID='_MAINSELECTID_' order by ClientCSSRS.TestDate desc |,
                                SHEADER      => ['print:center:BP:print','CreateDate:center:::date','TestDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'ClientCSSRS',
                                STITLE       => 'Columbia-Suicide Severity Scale - Full Scale Lifetime / Recent',
                                SADDNEW      => 'view=ClientCSSRSInp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bedit        => 'view=ClientCSSRSInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCSSRSs      => { SSELECT      => qq|select ClientCSSRSs.*, DATE_FORMAT(ClientCSSRSs.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCSSRSs.TestDate,'%m/%d/%Y') as TestDate from ClientCSSRSs where ClientCSSRSs.ClientID='_MAINSELECTID_' order by ClientCSSRSs.TestDate desc |,
                                SHEADER      => ['print:center:BP:print','CreateDate:center:::date','TestDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'ClientCSSRSs',
                                STITLE       => 'Columbia-Suicide Severity Scale - Screening Version - Since Last Visit',
                                SADDNEW      => 'view=ClientCSSRSsInp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bedit        => 'view=ClientCSSRSsInp.cgi',
                                SUBLIST      => []
                              },
      ListClientCSSRSt      => { SSELECT      => qq|select ClientCSSRSt.*, DATE_FORMAT(ClientCSSRSt.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientCSSRSt.TestDate,'%m/%d/%Y') as TestDate from ClientCSSRSt where ClientCSSRSt.ClientID='_MAINSELECTID_' order by ClientCSSRSt.TestDate desc |,
                                SHEADER      => ['print:center:BP:print','CreateDate:center:::date','TestDate:center:::date','edit:center:BE:none'],
                                STABLE       => 'ClientCSSRSt',
                                STITLE       => 'Columbia-Suicide Severity Scale - SAFE-T Protocol',
                                SADDNEW      => 'view=ClientCSSRStInp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bedit        => 'view=ClientCSSRStInp.cgi',
                                SUBLIST      => []
                              },
      ListClientDCGD       => { SSELECT      => qq|select ClientDCGD.*, DATE_FORMAT(ClientDCGD.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientDCGD.TestDate,'%m/%d/%Y') as TestDate from ClientDCGD where ClientDCGD.ClientID='_MAINSELECTID_' order by ClientDCGD.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Impairment:center:FS::numeric','Episode:center:FS:Episode:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientDCGD',
                                STITLE       => 'DSM5 Diagnostic Criteria: Gambling Disorder',
                                SADDNEW      => 'view=ClientDCGDInp.cgi',
                                Bprint       => 'PrintPHQ',
                                FImpairment  => 'uCalc->flagTotal(%form+%record+qA+a+i+4+6+8)return0',
                                FEpisode     => 'uCalc->mtValue(%form+%record+ClientDCGD+qB)',
                                Bedit        => 'view=ClientDCGDInp.cgi',
                                SUBLIST      => []
                              },
      ListClientASAM       => { SSELECT      => qq|select ClientASAM.*, DATE_FORMAT(ClientASAM.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientASAM.TestDate,'%m/%d/%Y') as TestDate from ClientASAM left join Provider on Provider.ProvID=ClientASAM.Interviewer where ClientASAM.ClientID='_MAINSELECTID_' order by ClientASAM.TestDate desc |,
                                SHEADER      => ['print:center:BP','TestDate:center:::date','Interviewer:left:::default','AdultChild:center','Level:right','Type:center','CreateDate:center:::date','edit:center:FE:none'],
                                STABLE       => 'ClientASAM',
                                STITLE       => 'American Society of Addiction Medicine (ASAM)',
                                Bprint       => 'printClientASAM',
                                Fedit        => 'uCalc->viewASAM(%form+%record)',
                                SUBLIST      => []
                              },
      ListClientODAS       => { SSELECT      => qq|select ClientODAS.*, DATE_FORMAT(ClientODAS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientODAS.TestDate,'%m/%d/%Y') as TestDate from ClientODAS where ClientODAS.ClientID='_MAINSELECTID_' order by ClientODAS.TestDate desc |,
                                SHEADER      => ['print:center:BP:print<BR>ODASL','printtslevel:center:BP:print<BR>TS Level','printwmscore:center:BP:print<BR>WM Score','CreateDate:center:::date','TestDate:center:::date','Intoxication:center:FS::numeric','WM:center:FS::numeric','BioMedical:center:FS::numeric','MentalHealth:center:FS::numeric','Relapse:center:FS::numeric','Recovery:center:FS::numeric','Readiness:center:FS::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientODAS',
                                STITLE       => 'Oklahoma Determination of ASAM Level',
                                SADDNEW      => 'view=ClientODASInp.cgi',
                                Bprint       => 'printClientPHQ',
                                Bprinttslevel  => 'printClientPHQ:TSLevels',
                                Bprintwmscore  => 'printClientPHQ:WMScore',
                                FIntoxication  => 'uCalc->flagTotal(%form+%record+D1q+1+2+3+5+7)return0',
                                FWM          => 'uCalc->flagTotal(%form+%record+D1q+3+6+2+4+6)return0',
                                FBioMedical  => 'uCalc->flagTotal(%form+%record+D2q+1+7+7+13+19)return0',
                                FMentalHealth  => 'uCalc->flagTotal(%form+%record+D3q+1+8+11+21+31)return0',
                                FReadiness   => 'uCalc->flagTotal(%form+%record+D4q+1+6+7+13+19)return0',
                                FRelapse     => 'uCalc->flagTotal(%form+%record+D5q+1+10+10+18+28)return0',
                                FRecovery    => 'uCalc->flagTotal(%form+%record+D6q+1+9+11+21+31)return0',
                                Bedit        => 'view=ClientODASInp.cgi',
                                SUBLIST      => []
                              },
      ListClientODAS2017   => { SSELECT      => qq|select ClientODAS2017.*, DATE_FORMAT(ClientODAS2017.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientODAS2017.TestDate,'%m/%d/%Y') as TestDate from ClientODAS2017 where ClientODAS2017.ClientID='_MAINSELECTID_' order by ClientODAS2017.TestDate desc |,
                                SHEADER      => ['print:center:BP','printsum:center:BP','CreateDate:center:::date','TestDate:center:::date','Intoxication:center:FS::numeric','WM:center:FS::numeric','BioMedical:center:FS::numeric','MentalHealth:center:FS::numeric','Readiness:center:FS::numeric','Relapse:center:FS::numeric','Recovery:center:FS::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientODAS2017',
                                STITLE       => 'Oklahoma Determination of ASAM Level (2017)',
                                SADDNEW      => 'view=ClientODAS2017Inp.cgi',
                                Bprint       => 'PrintPHQ',
                                Bprintsum    => 'PrintPHQ:Scores',
                                FIntoxication  => 'uCalc->flagTotal(%form+%record+D1q+1+2+3+5+7)return0',
                                FWM          => 'uCalc->flagTotal(%form+%record+D1q+3+7+2+4+6)return0',
                                FBioMedical  => 'uCalc->flagTotal(%form+%record+D2q+1+7+7+13+19)return0',
                                FMentalHealth  => 'uCalc->flagTotal(%form+%record+D3q+1+10+11+21+31)return0',
                                FReadiness   => 'uCalc->flagTotal(%form+%record+D4q+1+6+7+13+19)return0',
                                FRelapse     => 'uCalc->flagTotal(%form+%record+D5q+1+10+10+18+28)return0',
                                FRecovery    => 'uCalc->flagTotal(%form+%record+D6q+1+10+11+21+31)return0',
                                Bedit        => 'view=ClientODAS2017Inp.cgi',
                                SUBLIST      => []
                              },
      ListClientOOWS       => { SSELECT      => qq|select ClientOOWS.*, DATE_FORMAT(ClientOOWS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientOOWS.TestDate,'%m/%d/%Y') as TestDate from ClientOOWS where ClientOOWS.ClientID='_MAINSELECTID_' order by ClientOOWS.TestDate desc |,
                                SHEADER      => ['print:center:BP','TestDate:center:::date','TestTime:center:::time','Score:center:FS:Score:default','edit:center:BE:none'],
                                STABLE       => 'ClientOOWS',
                                STITLE       => 'Objective Opioid Withdrawal Scale (OOWS)',
                                SADDNEW      => 'view=ClientOOWSInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FScore       => 'uCalc->calcTotal(%form+%record+q+1+13)return0',
                                Bedit        => 'view=ClientOOWSInp.cgi',
                                SUBLIST      => []
                              },
      ListClientMHSF       => { SSELECT      => qq|select ClientMHSF.*, DATE_FORMAT(ClientMHSF.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientMHSF.TestDate,'%m/%d/%Y') as TestDate from ClientMHSF where ClientMHSF.ClientID='_MAINSELECTID_' order by ClientMHSF.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Stress:center:FS::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientMHSF',
                                STITLE       => 'Mental Health Screening Form-III FY15',
                                SADDNEW      => 'view=ClientMHSFInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FStress      => 'uCalc->flagTotal(%form+%record+q+1+17+5+10+15)return0',
                                Bedit        => 'view=ClientMHSFInp.cgi',
                                SUBLIST      => []
                              },
      ListClientMMSE       => { SSELECT      => qq|select ClientMMSE.*, DATE_FORMAT(ClientMMSE.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientMMSE.TestDate,'%m/%d/%Y') as TestDate from ClientMMSE where ClientMMSE.ClientID='_MAINSELECTID_' order by ClientMMSE.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Score:center:FS::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientMMSE',
                                STITLE       => 'Mini-Mental State Examination (MMSE)',
                                SADDNEW      => 'view=ClientMMSEInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FScore      => 'uCalc->flagTotal(%form+%record+q+1+17+5+10+15)return0',
                                Bedit        => 'view=ClientMMSEInp.cgi',
                                SUBLIST      => []
                              },
      ListClientSMFQ       => { SSELECT      => qq|select ClientSMFQ.*, DATE_FORMAT(ClientSMFQ.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientSMFQ.TestDate,'%m/%d/%Y') as TestDate from ClientSMFQ where ClientSMFQ.ClientID='_MAINSELECTID_' order by ClientSMFQ.TestDate desc |,
                                SHEADER      => ['printChild:center:BP:print<BR>Child Self-Report','printParent:center:BP:print<BR>Parent Report on Child','printAdult:center:BP:print<BR>Adult Self-Report','CreateDate:center:::date','TestDate:center:::date','Depression:center:FS:Depression<br>(Child/Adult/Total):numeric','edit:center:BE:none'],
                                STABLE       => 'ClientSMFQ',
                                STITLE       => 'Short Mood and Feeling Questionnaire',
                                SADDNEW      => 'view=ClientSMFQInp.cgi',
                                BprintChild  => 'printClientPHQ:Child',
                                BprintParent => 'printClientPHQ:Parent',
                                BprintAdult  => 'printClientPHQ:Adult',
                                FDepression  => 'uCalc->mfqDepression(%form+%record)return0',
                                Bedit        => 'view=ClientSMFQInp.cgi',
                                SUBLIST      => []
                              },
      ListClientTCUDS      => { SSELECT      => qq|select ClientTCUDS.*, DATE_FORMAT(ClientTCUDS.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientTCUDS.TestDate,'%m/%d/%Y') as TestDate, ClientTCUDS.q14 as DrugTreatment, ClientTCUDS.q15 as DrugProblems, ClientTCUDS.q16 as DrugInjections, ClientTCUDS.q17 as Importance from ClientTCUDS where ClientTCUDS.ClientID='_MAINSELECTID_' order by ClientTCUDS.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Stress:center:FS::numeric','DrugUse:center:FS:Drug Use:numeric','DrugTreatment:center::Drug Treatment:numeric','DrugProblems:center::Drug Problems:numeric','DrugInjections:center::Drug Injections:numeric','Importance:center:::numeric','edit:center:BE:none'],
                                STABLE       => 'ClientTCUDS',
                                STITLE       => 'TCU Drug Screen V',
                                SADDNEW      => 'view=ClientTCUDSInp.cgi',
                                Bprint       => 'printClientPHQ',
                                FStress      => 'uCalc->flagTotal(%form+%record+q+1+9+5+10+15)return0',
                                FDrugUse     => 'uCalc->flagTotal(%form+%record+q13+a+s+5+10+15)return0',
                                Bedit        => 'view=ClientTCUDSInp.cgi',
                                SUBLIST      => []
                              },
      ListClientPCLC       => { SSELECT      => qq|select ClientPCLC.*, DATE_FORMAT(ClientPCLC.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientPCLC.TestDate,'%m/%d/%Y') as TestDate from ClientPCLC where ClientPCLC.ClientID='_MAINSELECTID_' order by ClientPCLC.TestDate desc |,
                                SHEADER      => ['print:center:BP','CreateDate:center:::date','TestDate:center:::date','Bothered:center:FS:Bothered by:numeric','edit:center:BE:none'],
                                STABLE       => 'ClientPCLC',
                                STITLE       => 'Abbreviated PCL-C',
                                SADDNEW      => 'view=ClientPCLCInp.cgi',
                                Bprint       => 'PrintPHQ',
                                FBothered    => 'uCalc->flagTotal(%form+%record+q+1+17+5+10+15)return0',
                                Bedit        => 'view=ClientPCLCInp.cgi',
                                SUBLIST      => []
                              },
      ListClientVitalSigns => { SSELECT      => qq|select ClientVitalSigns.*, DATE_FORMAT(ClientVitalSigns.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientVitalSigns.VDate,'%m/%d/%Y') as VDate from ClientVitalSigns where ClientVitalSigns.ClientID='_MAINSELECTID_' order by ClientVitalSigns.VDate desc |,
                                SHEADER      => ['VDate:center::Observation Date:date','HeightFeet:center::Height:numeric','HeightInches:center::Inches:numeric','Weight:center','Waist:center::Waist Circumference','BMI:center:FS::numeric','BPSystolic:center','BPDiastolic:center','Pulse:center','HbA1c:center','edit:center:BE:none'],
                                STABLE       => 'ClientVitalSigns',
                                STITLE       => 'Vital Signs',
                                SADDNEW      => 'view=ClientVitalSigns.cgi',
                                FBMI         => 'DBA->getBMI(%form+%record)return0',
                                Bedit        => 'view=ClientVitalSigns.cgi',
                                SUBLIST      => []
                              },
      ShowClientVitalSigns => { SSELECT      => qq|select ClientVitalSigns.*, DATE_FORMAT(ClientVitalSigns.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientVitalSigns.VDate,'%m/%d/%Y') as VDate from ClientVitalSigns where ClientVitalSigns.ClientID='_MAINSELECTID_' order by ClientVitalSigns.VDate desc |,
                                SHEADER      => ['VDate:center::Observation Date:date','HeightFeet:center::Height:numeric','HeightInches:center::Inches:numeric','Weight:center','BMI:center:FS::numeric','BSA:center:FS::numeric','Waist:center','Temperature:center::Temp','CreateDate:center::date'],
                                STABLE       => 'ClientVitalSigns',
                                STITLE       => 'Vital Signs',
                                FBMI         => 'DBA->getBMI(%form+%record)return0',
                                FBSA         => 'DBA->getBSA(%form+%record)return0',
                                SUBLIST      => []							
                              },
           ListClientEDocs => { SSELECT      => qq|select ClientEDocs.*, DATE_FORMAT(ClientEDocs.CreateDate,'%m/%d/%Y') as CreateDate, Provider.LName as Provider,concat(COALESCE(xLDO.Code,''),' ',COALESCE(xLDO.Descr,'')) as LoincLabel from ClientEDocs left join Provider on Provider.ProvID=ClientEDocs.CreateProvID left join okmis_config.xEDocTags on xEDocTags.ID=ClientEDocs.Type left join okmis_config.xLDO on xLDO.Code = ClientEDocs.Loinc where ClientEDocs.ClientID='_MAINSELECTID_' order by xEDocTags.Tag|,
                                SHEADER      => ['CreateDate:center:::date','LoincLabel:left::LOINC Description:default','Title:center:::default','Descr:left::Description:default','Provider:left:::default','Path:center:BD:display','edit:center:BE:none'],
                                STABLE       => 'ClientEDocs',
                                STITLE       => 'Client Electronic Documents',
                                SADDNEW      => 'view=ClientUpload.cgi',
                                Bedit        => 'view=ClientEDocs.cgi',
                                SUBLIST      => []
                              },
      ListClientLabs => { SSELECT      => qq|select ClientLabs.*, DATE_FORMAT(ClientLabs.AdminDate,'%m/%d/%Y') as AdminDate, Provider.LName as Provider from ClientLabs left join Provider on Provider.ProvID=ClientLabs.CreateProvID where ClientLabs.ClientID='_MAINSELECTID_' order by ClientLabs.AdminDate|,
                                SHEADER      => ['SNOMEDID:left','SNOMEDNAME:left','AdminDate:center:::date','status:center','token:center','HL7Path:center:BD:hl7','HTMPath:center:BD:print'],
                                STABLE       => 'ClientLabs',
                                STITLE       => 'Client Lab Results',
                                SUBLIST      => ['ListClientLabResults']
                              },
      ListClientLabResults => { SSELECT      => qq|select ClientLabResults.*, DATE_FORMAT(ClientLabResults.AdminDate,'%m/%d/%Y') as AdminDate from ClientLabResults where ClientLabResults.ClientLabsID='_MAINSELECTID_' order by ClientLabResults.AdminDate|,
                                SHEADER      => ['Code:left','Name:left','Status:center','AdminDate:center:::date','Value:center','Unit:center','Min:right','Max:right','Type:center'],
                                STABLE       => 'ClientLabResults',
                                STITLE       => 'Client Lab Results Detail',
                                SUBLIST      => []
                              },
      ShowClientNotes      => { SSELECT      => qq|select Treatment.*, DATE_FORMAT(Treatment.ContLogDate,'%m/%d/%Y') as VisitDate, Provider.LName as Provider, xSC.SCNum from Treatment left join Provider on Provider.ProvID=Treatment.ProvID left join xSC on xSC.SCID=Treatment.SCID where Treatment.ClientID='_MAINSELECTID_' order by Treatment.ContLogDate desc,Treatment.ContLogBegTime desc LIMIT 10|,
                                SHEADER      => ['print:center:BP','VisitDate:center:::date','Provider:left:::default','ContLogBegTime:center::Begin Time','ContLogEndTime:center::End Time','SCNum:center::ServiceCode'],
                                STABLE       => 'Treatment',
                                STITLE       => 'Visits',
                                Bprint       => 'printNotes',
                                SUBLIST      => []
                              },
      ShowClientMail       => { SSELECT      => qq|select ClientMail.*, DATE_FORMAT(ClientMail.ChangeDate,'%m/%d/%Y') as ChangeDate from ClientMail where ClientMail.ClientID='_MAINSELECTID_' order by ClientMail.ChangeDate desc|,
                                SHEADER      => ['view:center:BP','ChangeDate:center::Date:date','ToProvName:left::Provider:default','DateSent:center','Status:center'],
                                STABLE       => 'ClientMail',
                                STITLE       => 'Mail',
                                Bview        => 'ClientMail',
                                SUBLIST      => []
                              },
       ListClientInsurance => { SSELECT      => qq|select Insurance.*, xPriority.Descr as Priority, xInsurance.Name, DATE_FORMAT(Insurance.InsNumEffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(Insurance.InsNumExpDate,'%m/%d/%Y') as ExpDate, Insurance.DeductionMet as Met, Client.clinicClinicID as ClinicID, Client.ProvID as PrimaryProvID from Insurance left join xPriority on xPriority.ID=Insurance.Priority left join xInsurance on xInsurance.ID=Insurance.InsID left join Client on Client.ClientID=Insurance.ClientID where Insurance.ClientID='_MAINSELECTID_' order by Insurance.Priority, Insurance.InsNumEffDate desc|,
                                SHEADER      => ['Priority:center','Name:center','InsIDNum:center::InsNumber','EffDate:center','ExpDate:center','Deductible:center','Met:center','Copay:center','CCExpDate','edit:center:BE:none'],
                                STABLE       => 'Insurance',
                                STITLE       => 'Insurance',
                                STABS        => 'yes',
                                SADDNEW      => 'view=Insurance.cgi',
                                Bedit        => 'view=Insurance.cgi',
                                SUBLIST      => ['ListClientPrAuth']
                              },
       ListClientPrAuth    => { SSELECT      => qq|select ClientPrAuth.*, ClientPrAuthCDC.Status, DATE_FORMAT(ClientPrAuthCDC.StatusDate,'%m/%d/%Y') as StatusDate, xCDCTransTypes.Descr as TransType, DATE_FORMAT(ClientPrAuth.EffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(ClientPrAuth.ExpDate,'%m/%d/%Y') as ExpDate, ClientPrAuthCDC.CDCKey from ClientPrAuth left join ClientPrAuthCDC on ClientPrAuthCDC.ClientPrAuthID=ClientPrAuth.ID left join okmis_config.xCDCTransTypes on xCDCTransTypes.ID=ClientPrAuthCDC.TransType where ClientPrAuth.InsuranceID='_MAINSELECTID_' order by ClientPrAuth.EffDate desc, ClientPrAuth.ExpDate desc LIMIT 5|,
                                SHEADER      => ['TransType:center:BP','Status:center:FS','StatusDate:center','PAnumber:center:BP','EffDate:center','ExpDate:center','PAgroup:center:FS','CDCKey:center:BP','edit:center:BE:none'],
                                STABLE       => 'ClientPrAuth',
                                STITLE       => 'Prior Authorizations',
                                STABS        => 'yes',
                                SADDNEW      => 'view=ClientPrAuthInp.cgi',
                                BTransType   => 'printClientPrAuth::Click to print Prior Authorization',
                                FStatus      => 'CDC->listPAStatus(%form+_RECID_+_LINKS_)',
                                BPAnumber    => 'genTrPlan::Click here to print the PrAuth-TrPlan on a standard form',
                                FPAgroup     => 'CDC->listPAgroup(%form+_RECID_)',
                                BCDCKey      => 'printClientCDC::Click here to print the CDC form',
                                Bedit        => 'view=ClientPrAuthInp.cgi',
                                SUBLIST      => ['ListClientCARS','ListClientRVU']
                              },
       ListClientCARS      => { SSELECT      => qq|select PDDom.PDDomID, PDDom.Locked, PDDom.Dom1Score as Dom1,PDDom.Dom2Score as Dom2,PDDom.Dom3Score as Dom3,PDDom.Dom4Score as Dom4,PDDom.Dom5Score as Dom5,PDDom.Dom6Score as Dom6,PDDom.Dom7Score as Dom7,PDDom.Dom8Score as Dom8,PDDom.Dom9Score as Dom9 from PDDom where PDDom.PrAuthID='_MAINSELECTID_' order by PDDom.CreateDate desc|,
                                SHEADER      => ['Dom1:center','Dom2:center','Dom3:center','Dom4:center','Dom5:center','Dom6:center','Dom7:center','Dom8:center','Dom9:center','edit:center:BE:none'],
                                STABLE       => 'PDDom',
                                SACCESS      => 'CDC->listCARS(%form+_MAINID_)',
                                STITLE       => 'CAR Scores',
                                STABS        => 'no',
                                SONLY1       => 'yes',
                                SADDNEW      => 'view=PDDom.cgi',
                                Bedit        => 'view=PDDom.cgi',
                                SUBLIST      => []
                              },
       ListClientRVU       => { SSELECT      => qq|select PrAuthRVU.*, DATE_FORMAT(PrAuthRVU.EffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(PrAuthRVU.ExpDate,'%m/%d/%Y') as ExpDate, xSC.SCName from PrAuthRVU left join xSC on xSC.SCID=PrAuthRVU.SCID where PrAuthRVU.PrAuthID='_MAINSELECTID_' order by PrAuthRVU.EffDate, PrAuthRVU.ExpDate|,
                                SHEADER      => ['SCID:center','SCName:center','ReqRVU:center','AuthRVU:center','PANum:center','Interchange:center','EffDate:center','ExpDate:center','edit:center:BE:none'],
                                STABLE       => 'PrAuthRVU',
                                SACCESS      => '!CDC->required(%form++_MAINID_)',
                                STITLE       => 'Authorized Units',
                                STABS        => 'no',
                                SONLY1       => 'no',
                                SADDNEW      => 'view=PrAuthRVU.cgi',
                                Bedit        => 'view=PrAuthRVU.cgi',
                                SUBLIST      => []
                              },
       ListClientDischarge => { SSELECT      => qq|select ClientDischarge.*, ClientDischargeCDC.Status, DATE_FORMAT(ClientDischargeCDC.StatusDate,'%m/%d/%Y') as StatusDate, xCDCTransTypes.Descr as TransType, DATE_FORMAT(ClientDischargeCDC.TransDate,'%m/%d/%Y') as TransDate, ClientDischargeCDC.TransTime, ClientDischargeCDC.CDCKey from ClientDischarge left join ClientDischargeCDC on ClientDischargeCDC.ClientDischargeID=ClientDischarge.ID left join okmis_config.xCDCTransTypes on xCDCTransTypes.ID=ClientDischargeCDC.TransType where ClientDischarge.ClientID='_MAINSELECTID_' order by ClientDischargeCDC.TransDate desc|,
                                SHEADER      => ['TransType:center:BP','Status:center:FS','StatusDate:center','TransDate:center','TransTime:center','CDCKey:center','edit:center:BE:none'],
                                STABLE       => 'ClientDischarge',
                                STITLE       => 'Discharges',
                                STABS        => 'no',
                                SADDNEW      => 'view=ClientDischargeInp.cgi',
                                BTransType   => 'printClientDischarge::Click to print Discharge',
                                FStatus      => 'CDC->listDISStatus(%form+_RECID_+_LINKS_)',
                                Bedit        => 'view=ClientDischargeInp.cgi',
                                Blockededit  => 'view=ClientFollowup.cgi:FollowUp',
                                SUBLIST      => []
                              },
       ListClientInsuranceALL => { SSELECT      => qq|select Insurance.*, xPriority.Descr as Priority, xInsurance.Name, DATE_FORMAT(Insurance.InsNumEffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(Insurance.InsNumExpDate,'%m/%d/%Y') as ExpDate, Insurance.DeductionMet as Met, Client.clinicClinicID as ClinicID, Client.ProvID as PrimaryProvID from Insurance left join xPriority on xPriority.ID=Insurance.Priority left join xInsurance on xInsurance.ID=Insurance.InsID left join Client on Client.ClientID=Insurance.ClientID where Insurance.ClientID='_MAINSELECTID_' order by Insurance.Priority, Insurance.InsNumEffDate desc|,
                                SHEADER      => ['Priority:center','Name:center','InsIDNum:center::InsNumber','EffDate:center','ExpDate:center','Deductible:center','Met:center','Copay:center','CCExpDate','edit:center:BE:none'],
                                STABLE       => 'Insurance',
                                STITLE       => 'Insurance',
                                STABS        => 'no',
                                SADDNEW      => 'view=Insurance.cgi',
                                Bedit        => 'view=Insurance.cgi',
                                SUBLIST      => ['ListClientPrAuthALL']
                              },
       ListClientPrAuthALL => { SSELECT      => qq|select ClientPrAuth.*, ClientPrAuthCDC.Status, DATE_FORMAT(ClientPrAuthCDC.StatusDate,'%m/%d/%Y') as StatusDate, xCDCTransTypes.Descr as TransType, DATE_FORMAT(ClientPrAuth.EffDate,'%m/%d/%Y') as EffDate, DATE_FORMAT(ClientPrAuth.ExpDate,'%m/%d/%Y') as ExpDate, ClientPrAuthCDC.CDCKey from ClientPrAuth left join ClientPrAuthCDC on ClientPrAuthCDC.ClientPrAuthID=ClientPrAuth.ID left join okmis_config.xCDCTransTypes on xCDCTransTypes.ID=ClientPrAuthCDC.TransType where ClientPrAuth.InsuranceID='_MAINSELECTID_' order by ClientPrAuth.EffDate desc, ClientPrAuth.ExpDate desc|,
                                SHEADER      => ['TransType:center:BP','Status:center:FS','StatusDate:center','PAnumber:center:BP','EffDate:center','ExpDate:center','PAgroup:center:FS','CDCKey:center:BP','edit:center:BE:none'],
                                STABLE       => 'ClientPrAuth',
                                STITLE       => 'Prior Authorizations',
                                STABS        => 'no',
                                SADDNEW      => 'view=ClientPrAuthInp.cgi',
                                BTransType   => 'printClientPrAuth::Click to print Prior Authorization',
                                FStatus      => 'CDC->listPAStatus(%form+_RECID_+_LINKS_)',
                                BPAnumber    => 'genTrPlan::Click here to print the PrAuth-TrPlan on a standard form',
                                FPAgroup     => 'CDC->listPAgroup(%form+_RECID_)',
                                BCDCKey      => 'printClientCDC::Click here to print the CDC form',
                                Bedit        => 'view=ClientPrAuthInp.cgi',
                                SUBLIST      => ['ListClientCARS','ListClientRVU']
                              },
       ListClientAllergies => { SSELECT        => qq|select ClientAllergies.*,xAllergies.Descr as Allergy,xAllergies.ConceptID,DATE_FORMAT(ClientAllergies.StartDate,'%m/%d/%Y') as StartDate,DATE_FORMAT(ClientAllergies.EndDate,'%m/%d/%Y') as EndDate,xAdverseReaction.ConceptName as Reaction from ClientAllergies left join okmis_config.xAllergies on xAllergies.ID=ClientAllergies.AID left join okmis_config.xAdverseReaction on xAdverseReaction.ID=ClientAllergies.RID where ClientAllergies.ClientID='_MAINSELECTID_' order by ClientAllergies.CreateDate |,
                                SHEADER        => ['ConceptID:left','Allergy:left','Severity:left','StartDate:center','EndDate:center','Reaction:left','Comments:left::Note','edit:center:BE:none'],
                                STABLE         => 'ClientAllergies',
                                STITLE         => 'Client Allergies',
                                SADDNEW        => 'view=ClientAllergiesInp.cgi',
                                Bedit          => 'view=ClientAllergiesInp.cgi',
                                SUBLIST        => []
                              },
      ListClientFamily     => { SSELECT      => qq|select ClientFamily.*,xRelationship.Descr as Relation from ClientFamily left join okmis_config.xRelationship on xRelationship.ID=ClientFamily.Rel where ClientFamily.ClientID='_MAINSELECTID_' order by ClientFamily.Rel|,
                                SHEADER      => ['FName:left','LName:left','Relation:left','Age:center','Guardian:centerflag','EmerContact:centerflag','edit:center:BE:none'],
                                STABLE       => 'ClientFamily',
                                STITLE       => 'Family Members',
                                SADDNEW      => 'view=ClientFamilyInp.cgi',
                                Bedit        => 'view=ClientFamilyInp.cgi',
                                SUBLIST      => []
                              },
      ListClientIHFamily   => { SSELECT      => qq|select ClientFamily.*,xRelationship.Descr as Relation from ClientFamily left join okmis_config.xRelationship on xRelationship.ID=ClientFamily.Rel where ClientFamily.ClientID='_MAINSELECTID_' order by ClientFamily.Rel|,
                                SHEADER      => ['FName:left','LName:left','Relation:left','Age:center','Inhome:centerflag','RelValue:center','edit:center:BE:none'],
                                STABLE       => 'ClientFamily',
                                STITLE       => 'Family Members in the home',
                                SADDNEW      => 'view=ClientIHFamilyInp.cgi',
                                Bedit        => 'view=ClientIHFamilyInp.cgi',
                                SUBLIST      => []
                              },
      ListClientSAFamily   => { SSELECT      => qq|select ClientFamily.*,xRelationship.Descr as Relation from ClientFamily left join okmis_config.xRelationship on xRelationship.ID=ClientFamily.Rel where ClientFamily.ClientID='_MAINSELECTID_' order by ClientFamily.Rel|,
                                SHEADER      => ['FName:left','LName:left','Relation:left','Age:center','AbuseAlcohol:centerflag','AbuseDrugs:centerflag','AbusePsych:centerflag','edit:center:BE:none'],
                                STABLE       => 'ClientFamily',
                                STITLE       => 'Family Members and Abuse',
                                SADDNEW      => 'view=ClientSAFamilyInp.cgi',
                                Bedit        => 'view=ClientSAFamilyInp.cgi',
                                SUBLIST      => []
                              },
      ListClientDVFamily   => { SSELECT      => qq|select ClientFamily.*,xRelationship.Descr as Relation from ClientFamily left join okmis_config.xRelationship on xRelationship.ID=ClientFamily.Rel where ClientFamily.ClientID='_MAINSELECTID_' order by ClientFamily.Rel|,
                                SHEADER      => ['FName:left','LName:left','Relation:left','Age:center','AbuseEmotion:center','AbusePhysical:center','AbuseSexual:center','edit:center:BE:none'],
                                STABLE       => 'ClientFamily',
                                STITLE       => 'Family Members and Violence',
                                SADDNEW      => 'view=ClientDVFamilyInp.cgi',
                                Bedit        => 'view=ClientDVFamilyInp.cgi',
                                SUBLIST      => []
                              },
 ListClientFamilyProblems  => { SSELECT        => qq|select ClientFamilyProblems.*,misICD10.ICD10, misICD10.icdName, misICD10.SNOMEDID, misICD10.sctName, DATE_FORMAT(ClientFamilyProblems.InitiatedDate,'%m/%d/%Y') as InitiatedDate, DATE_FORMAT(ClientFamilyProblems.ResolvedDate,'%m/%d/%Y') as ResolvedDate, ClientFamilyProblems.Priority from ClientFamilyProblems left join okmis_config.misICD10 on misICD10.ID = ClientFamilyProblems.UUID where ClientFamilyProblems.ClientFamilyID='_MAINSELECTID_' order by ClientFamilyProblems.Priority |,
                                SHEADER        => ['ICD10:left','icdName:left','SNOMEDID:center','sctName:left','InitiatedDate:center','ResolvedDate:center','Priority:center:BO:order','Comments:left::Notes','edit:center:BE:none'],
                                STABLE         => 'ClientFamilyProblems',
                                STITLE         => 'Client FamilyProblems',
                                SADDNEW        => 'view=ClientFamilyProblemsInp.cgi',
                                Bedit          => 'view=ClientFamilyProblemsInp.cgi',
                                SUBLIST        => []
                              },
   ListClientInsRemarks    => { SSELECT        => qq|select ClientInsRemarks.*, DATE_FORMAT(ClientInsRemarks.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientInsRemarks.CheckDate,'%m/%d/%Y') as CheckDate from ClientInsRemarks where ClientInsRemarks.ClientID='_MAINSELECTID_' order by ClientInsRemarks.CheckDate|,
                                SHEADER        => ['CheckNo:center:::default','CheckDate:center:::date','CreateDate:center:::date','Remark:center:BP'],
                                STABLE         => 'ClientInsRemarks',
                                STITLE         => 'Insurance Remarks from reconciliation report.',
                                BRemark        => 'disHTML:HTMLText:Click to view remark ',
                                SUBLIST        => []
                              },
       ListClientMeds    => { SSELECT        => qq|select ClientMeds.* from ClientMeds where ClientMeds.ClientID='_MAINSELECTID_' and ClientMeds.Active=1 order by ClientMeds.PrescriptionDate |,
                                SHEADER        => ['PrescriptionDate:center:::date','rxcui:center','DrugInfo:left','PrescriptionDate:center','Route:center','Strength:center','StrengthUOM:center::UOM','DosageFrequencyDescription:center::Dosage','edit:center:BE:none'],
                                STABLE         => 'ClientMeds',
                                STITLE         => 'Client Medications',
                                SADDNEW        => 'view=ClientMedsInp.cgi',
                                Bedit          => 'view=ClientMedsInp.cgi',
                                SUBLIST        => []
                              },
       ListClientAdMeds    => { SSELECT        => qq|select ClientAdMeds.* from ClientAdMeds where ClientAdMeds.ClientID='_MAINSELECTID_' order by ClientAdMeds.PrescriptionDate |,
                                SHEADER        => ['PrescriptionDate:center:::date','rxcui:center','DrugInfo:left','PrescriptionDate:center','Route:center','Strength:center','StrengthUOM:center::UOM','DosageFrequencyDescription:center::Dosage','Active:centerflag','edit:center:BE:none'],
                                STABLE         => 'ClientAdMeds',
                                STITLE         => 'Client Adminstered Medications',
                                SADDNEW        => 'view=ClientAdMedsInp.cgi',
                                Bedit          => 'view=ClientAdMedsInp.cgi',
                                SUBLIST        => []
                              },
       ShowClientMeds      => { SSELECT        => qq|select ClientMeds.* from ClientMeds where ClientMeds.ClientID='_MAINSELECTID_' order by ClientMeds.PrescriptionDate |,
                                SHEADER        => ['PrescriptionDate:center:::date','rxcui:center','DrugInfo:left','PrescriptionDate:center','Route:center','Strength:center','StrengthUOM:center::UOM','DosageFrequencyDescription:center::Dosage','Active:centerflag','LocationName:left'],
                                STABLE         => 'ClientMeds',
                                STITLE         => 'Client Medications',
                                SUBLIST        => []
                              },
      ListClientTreatments => { SSELECT        => qq|select Hospital.*,Hos.ProvOrgName as Hospital,Fac.ProvOrgName as Facility from Hospital left join okmis_config.xNPI as Hos on Hos.NPI=Hospital.HospIDNPI left join okmis_config.xNPI as Fac on Fac.NPI=Hospital.FacIDNPI where Hospital.ClientID='_MAINSELECTID_' order by Hospital.IntDate|,
                                SHEADER        => ['Hospital:left','Facility:left','Type:center','IntDate:center::Intake Date','Length:center::How Long','Reason:left','edit:center:BE:none'],
                                STABLE         => 'Hospital',
                                STITLE         => 'Treatment History',
                                SADDNEW        => 'view=ClientHospitalInp.cgi',
                                Bedit          => 'view=ClientHospitalInp.cgi',
                                SUBLIST        => []
                              },
       ListClientGDS       => { SSELECT        => qq|select ClientGDS.*,DATE_FORMAT(ClientGDS.EffDate,'%m/%d/%Y') as EffDate,DATE_FORMAT(ClientGDS.ExpDate,'%m/%d/%Y') as ExpDate from ClientGDS where ClientGDS.ClientID='_MAINSELECTID_' order by ClientGDS.EffDate |,
                                SHEADER        => ['EffDate:center','Score:right','ExpDate:center','edit:center:BE:none'],
                                STABLE         => 'ClientGDS',
                                STITLE         => 'Client Geriatric Depression Scale',
                                SADDNEW        => 'view=ClientGDSInp.cgi',
                                Bedit          => 'view=ClientGDSInp.cgi',
                                SUBLIST        => []
                              },
       ListClientGDSS      => { SSELECT        => qq|select ClientGDSS.*,DATE_FORMAT(ClientGDSS.TestDate,'%m/%d/%Y') as TestDate from ClientGDSS where ClientGDSS.ClientID='_MAINSELECTID_' order by ClientGDSS.TestDate |,
                                SHEADER        => ['print:center:BP','TestDate:center','q1:center','q2:center','q3:center','Score:right:FS','edit:center:BE:none'],
                                STABLE         => 'ClientGDSS',
                                Bprint         => 'printClientPHQ',
                                STITLE         => 'Client Geriatric Depression Scale (GDS-SF)',
                                SADDNEW        => 'view=ClientGDSSInp.cgi',
                                Bedit          => 'view=ClientGDSSInp.cgi',
				FScore         => 'uCalc->flagTotal(%form+%record+q+1+15+5++10)return0',
                                SUBLIST        => []
                              },
       ListClientGDSL      => { SSELECT        => qq|select ClientGDSL.*,DATE_FORMAT(ClientGDSL.TestDate,'%m/%d/%Y') as TestDate from ClientGDSL where ClientGDSL.ClientID='_MAINSELECTID_' order by ClientGDSL.TestDate |,
                                SHEADER        => ['print:center:BP','TestDate:center','q1:center','q2:center','q3:center','Score:right:FS','edit:center:BE:none'],
                                STABLE         => 'ClientGDSL',
                                Bprint         => 'printClientPHQ',
                                STITLE         => 'Client Geriatric Depression Scale (GDS-LF)',
                                SADDNEW        => 'view=ClientGDSLInp.cgi',
                                Bedit          => 'view=ClientGDSLInp.cgi',
				FScore         => 'uCalc->flagTotal(%form+%record+q+1+30+10++20)return0',
                                SUBLIST        => []
                              },
       ListClientIncome    => { SSELECT        => qq|select ClientIncome.*,xIncome.Descr as Source,DATE_FORMAT(ClientIncome.EffDate,'%m/%d/%Y') as EffDate,DATE_FORMAT(ClientIncome.ExpDate,'%m/%d/%Y') as ExpDate from ClientIncome left join okmis_config.xIncome on xIncome.ID=ClientIncome.Src where ClientIncome.ClientID='_MAINSELECTID_' order by ClientIncome.EffDate |,
                                SHEADER        => ['Source:left','EffDate:center','ExpDate:center','Amt:righttotal::Amount','edit:center:BE:none'],
                                STABLE         => 'ClientIncome',
                                STITLE         => 'Client Income',
                                SADDNEW        => 'view=ClientIncomeInp.cgi',
                                Bedit          => 'view=ClientIncomeInp.cgi',
                                SUBLIST        => []
                              },
       ListClientPDMeds    => { SSELECT        => qq|select PDMed.*,PDMed.MedDos as Dosage,PDMed.MedFreq as Frequency,xNPI.ProvLastName as Physician,xMedNames.TradeName as Prescription from PDMed left join okmis_config.xNPI on xNPI.NPI=PDMed.PhysNPI left join okmis_config.xMedNames on xMedNames.ID=PDMed.MedID where PDMed.ClientID='_MAINSELECTID_' order by PDMed.StartDate,xMedNames.TradeName |,
                                SHEADER        => ['Physician:left','Prescription:center','Dosage:center','Pills:center','Frequency:center','StartDate:center','MedType:center','Locked:centerflag','MedActive:centerflag::Active','edit:center:BE:none'],
                                STABLE         => 'PDMed',
                                STITLE         => 'Client Reported Medications',
                                SADDNEW        => 'view=ClientPDMedInp.cgi',
                                Bedit          => 'view=ClientPDMedInp.cgi',
                                SUBLIST        => []
                              },
       ListClientVaccines  => { SSELECT        => qq|select ClientVaccines.ID,ClientVaccines.Locked,ClientVaccines.CVX,xVaccines.Descr as Description,xVaccines.Text as Definition,DATE_FORMAT(ClientVaccines.VisitDate,'%m/%d/%Y') as VisitDate from ClientVaccines left join okmis_config.xVaccines on xVaccines.ID = ClientVaccines.CVX where ClientVaccines.ClientID='_MAINSELECTID_' order by ClientVaccines.VisitDate |,
                                SHEADER        => ['CVX:center','Description:left','VisitDate:center','Definition:left','edit:center:BE:none'],
                                STABLE         => 'ClientVaccines',
                                STITLE         => 'Client Vaccines',
                                SADDNEW        => 'view=ClientVaccinesInp.cgi',
                                Bedit          => 'view=ClientVaccinesInp.cgi',
                                SUBLIST        => []
                              },
      ListClientProcedures => { SSELECT      => qq|select ClientProcedures.*, DATE_FORMAT(ClientProcedures.StartDate,'%m/%d/%Y') as StartDate, DATE_FORMAT(ClientProcedures.EndDate,'%m/%d/%Y') as EndDate, xProcedures.ConceptCode as ProcedureCode, xProcedures.ConceptName as ProcedureName, xProcedureTarget.ConceptCode as TargetCode, xProcedureTarget.ConceptName as TargetName,IF(EndDate is not null,'closed','active') as Status from ClientProcedures left join okmis_config.xProcedures on xProcedures.ConceptCode=ClientProcedures.ProcedureID left join okmis_config.xProcedureTarget on xProcedureTarget.ID=ClientProcedures.TargetID where ClientProcedures.ClientID='_MAINSELECTID_' order by ClientProcedures.StartDate|,
                                SHEADER      => ['ProcedureName:left','ProcedureID:left','TargetName:left','di:left:FS:DeviceID','gmdnPTName:left','StartDate:center:::date','EndDate:center:::date','Active:centerflag','edit:center:BE:none'],
                                STABLE       => 'ClientProcedures',
                                STITLE       => 'Client Procedures',
                                SADDNEW      => 'view=ClientProcedureInp.cgi',
                                Fdi          => 'DBA->listDeviceID(%form+_RECID_)',
                                Bedit        => 'view=ClientProcedureInp.cgi',
                                SUBLIST      => []
                              },
      ListClientJournals   => { SSELECT      => qq|select ClientJournals.*, DATE_FORMAT(ClientJournals.EffDate,'%m/%d/%Y') as Effective, DATE_FORMAT(ClientJournals.ExpDate,'%m/%d/%Y') as Expires from ClientJournals where ClientJournals.ClientID='_MAINSELECTID_' order by ClientJournals.CreateDate|,
                                SHEADER      => ['Summary:left','Type:left','Effective:center:::date','Expires:center:::date','Active:centerflag','edit:center:BE:none'],
                                STABLE       => 'ClientJournals',
                                STITLE       => 'Client Journals Entries',
                                SADDNEW      => 'view=ClientJournalsInp.cgi',
                                Bedit        => 'view=ClientJournalsInp.cgi',
                                SUBLIST      => []
                              },
       ShowProgNotesLog    => { SSELECT        => qq|select ProgNotesLog.*,Provider.LName as Provider,DATE_FORMAT(ProgNotesLog.ProvOKDate,'%m/%d/%Y') as ProviderDate,ProgNotesLog.ProvOKTime as ProviderTime,Manager.LName as Manager,ProgNotesLog.MgrRevTime as ManagerTime,DATE_FORMAT(ProgNotesLog.MgrRevDate,'%m/%d/%Y') as ManagerDate,DATE_FORMAT(ProgNotesLog.RecDOLC,'%m/%d/%Y') as ChangeDate from ProgNotesLog left join Provider on Provider.ProvID=ProgNotesLog.ProvID left join Provider as Manager on Manager.ProvID=ProgNotesLog.MgrProvID where ProgNotesLog.NoteID='_MAINSELECTID_' order by ProgNotesLog.RecDOLC |,
                                SHEADER        => ['Provider:left','ProviderDate:center','ProviderTime:center','Manager:left','ManagerDate:center','ManagerTime:center','ChangeDate:center'],
                                STABLE         => 'ProgNotesLog',
                                STITLE         => 'Logged Note Modifications',
                                SUBLIST        => []
                              },
       ShowPhysNotesLog    => { SSELECT        => qq|select PhysNotesLog.*,Provider.LName as Provider,DATE_FORMAT(PhysNotesLog.ProvOKDate,'%m/%d/%Y') as ProviderDate,PhysNotesLog.ProvOKTime as ProviderTime,Manager.LName as Manager,PhysNotesLog.MgrRevTime as ManagerTime,DATE_FORMAT(PhysNotesLog.MgrRevDate,'%m/%d/%Y') as ManagerDate,DATE_FORMAT(PhysNotesLog.RecDOLC,'%m/%d/%Y') as ChangeDate from PhysNotesLog left join Provider on Provider.ProvID=PhysNotesLog.ProvID left join Provider as Manager on Manager.ProvID=PhysNotesLog.MgrProvID where PhysNotesLog.NoteID='_MAINSELECTID_' order by PhysNotesLog.RecDOLC |,
                                SHEADER        => ['Provider:left','ProviderDate:center','ProviderTime:center','Manager:left','ManagerDate:center','ManagerTime:center','ChangeDate:center'],
                                STABLE         => 'PhysNotesLog',
                                STITLE         => 'Logged Note Modifications',
                                SUBLIST        => []
                              },
      ListPhiMail          => { SSELECT      => qq|select PhiMail.* from PhiMail left join Provider on Provider.ProvID=PhiMail.ProvID where PhiMail.ProvID='_MAINSELECTID_' order by PhiMail.ID|,
                                SHEADER      => ['ID:left','From:left','To:left','InDate:left','Subject:left'],
                                STABLE       => 'PhiMail',
                                STITLE       => 'PhiMail Received',
                                SUBLIST      => ['ListPhiMailAttachments']
                              },
      ListPhiMailAttachments => { SSELECT      => qq|select PhiMailAttachments.*, DATE_FORMAT(PhiMailAttachments.CreateDate,'%m/%d/%Y') as CreateDate from PhiMailAttachments where PhiMailAttachments.PhiMailID='_MAINSELECTID_' order by PhiMailAttachments.ID|,
                                SHEADER      => ['Title:left::Filename','Descr:left::Ident','CreateDate:center:::date','CDA:center:BP','Validate:center:BP','Link:center:BP'],
                                STABLE       => 'PhiMailAttachments',
                                STITLE       => 'PhiMailAttachments Received',
                                BCDA         => 'disCDA::Click here to Display the CDA',
                                BValidate    => 'valCCDA::Click here to Validate the CCDA',
                                BLink        => 'linkCCDA::Click here to Link the CCDA',
                                SUBLIST      => []
                              },
      ListExportFiles   => { SSELECT      => qq|select ProviderEDocs.*, DATE_FORMAT(ProviderEDocs.CreateDate,'%m/%d/%Y') as CreateDate, xEDocTags.Tag, Provider.LName as Provider from ProviderEDocs left join Provider on Provider.ProvID=ProviderEDocs.CreateProvID left join okmis_config.xEDocTags on xEDocTags.ID=ProviderEDocs.Type where ProviderEDocs.ProvID='_MAINSELECTID_' and ProviderEDocs.Type=40 order by xEDocTags.Tag|,
                                SHEADER      => ['CreateDate:center:::date','Tag:left::Type:default','Title:center::Folder:default','Descr:left::Decription:default','Provider:left:::default','Path:center:BD:download','edit:center:BE:none'],
                                STABLE       => 'ProviderEDocs',
                                STITLE       => 'Export CCDA Documents',
                                SADDNEW      => '',
                                Bedit        => 'view=ExportCCDAs.cgi',
                                SUBLIST      => []
                              },
      ListImportCCDAs => { SSELECT      => qq|select ClientEDocs.*, DATE_FORMAT(ClientEDocs.CreateDate,'%m/%d/%Y') as CreateDate, xEDocTags.Tag, Provider.LName as Provider from ClientEDocs left join Provider on Provider.ProvID=ClientEDocs.CreateProvID left join okmis_config.xEDocTags on xEDocTags.ID=ClientEDocs.Type where ClientEDocs.ClientID='_MAINSELECTID_' and ClientEDocs.Type=41 order by xEDocTags.Tag|,
                                SHEADER      => ['Title:left::Title:default','Descr:left::Decription:default','CreateDate:center:::date','Provider:left:::default','CDA:center:BP','Import:center:BP','edit:center:BE:none'],
                                STABLE       => 'ClientEDocs',
                                STITLE       => 'Import CCDA Documents',
                                SADDNEW      => '',
                                BCDA         => 'disCDA::Click here to Display the CDA',
                                BImport      => 'importCCDA::Click here to Import the CCDA',
                                Bedit        => 'view=ImportCCDAs.cgi',
                                SUBLIST      => []
                              },
      ListCDSrules         => { SSELECT      => qq|select CDSrules.*, DATE_FORMAT(CDSrules.ReleaseDate,'%m/%d/%Y') as ReleaseDate from CDSrules where CDSrules.ProvID='_MAINSELECTID_' order by CDSrules.CreateDate|,
                                SHEADER      => ['Name:left','AlertMessage:left','Funding:left','Author:left','ReleaseDate:center:::date','IsEnabled:centerflag','edit:center:BE:none'],
                                STABLE       => 'CDSrules',
                                STITLE       => 'Clinical Descision Support Rules',
                                SADDNEW      => 'view=CDSrulesInp.cgi',
                                Bedit        => 'view=CDSrulesInp.cgi',
                                SUBLIST      => []
                              },
ListClientInterventionsOrdered => { SSELECT      => qq|select ClientInterventionsOrdered.*, DATE_FORMAT(ClientInterventionsOrdered.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientInterventionsOrdered.VisitDate,'%m/%d/%Y') as VisitDate, xInterventionOrder.ConceptName as OrderedDescr, xInterventionOrderReason.ConceptName as ReasonDescr, xInterventionOrderRejected.ConceptName as RejectedDescr from ClientInterventionsOrdered left join okmis_config.xInterventionOrder on xInterventionOrder.ID=ClientInterventionsOrdered.Intervention left join okmis_config.xInterventionOrderReason on xInterventionOrderReason.ID=ClientInterventionsOrdered.Reason left join okmis_config.xInterventionOrderRejected on xInterventionOrderRejected.ID=ClientInterventionsOrdered.Rejected where ClientInterventionsOrdered.ClientID='_MAINSELECTID_' order by ClientInterventionsOrdered.VisitDate desc |,
                                SHEADER      => ['VisitDate:center::Ordered Date:date','OrderedDescr:left::Intervention','Intervention:left::Code','ReasonDescr:center::Reason','RejectedDescr:center::Rejected','edit:center:BE:none'],
                                STABLE       => 'ClientInterventionsOrdered',
                                STITLE       => 'Client Interventions Ordered',
                                SADDNEW      => 'view=ClientInterventionsOrderedInp.cgi',
                                Bedit        => 'view=ClientInterventionsOrderedInp.cgi',
                                SUBLIST      => []
                              },
ListClientInterventionsPerformed => { SSELECT      => qq|select ClientInterventionsPerformed.*, DATE_FORMAT(ClientInterventionsPerformed.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientInterventionsPerformed.VisitDate,'%m/%d/%Y') as VisitDate, xInterventionPerformed.ConceptName as PerformedDescr, xInterventionPerformedReason.ConceptName as ReasonDescr, xInterventionPerformedRejected.ConceptName as RejectedDescr from ClientInterventionsPerformed left join okmis_config.xInterventionPerformed on xInterventionPerformed.ID=ClientInterventionsPerformed.Intervention left join okmis_config.xInterventionPerformedReason on xInterventionPerformedReason.ID=ClientInterventionsPerformed.Reason left join okmis_config.xInterventionPerformedRejected on xInterventionPerformedRejected.ID=ClientInterventionsPerformed.Rejected where ClientInterventionsPerformed.ClientID='_MAINSELECTID_' order by ClientInterventionsPerformed.VisitDate desc |,
                                SHEADER      => ['VisitDate:center::Performed Date:date','PerformedDescr:left::Intervention','Intervention:left::Code','ReasonDescr:center::Reason','RejectedDescr:center::Rejected','edit:center:BE:none'],
                                STABLE       => 'ClientInterventionsPerformed',
                                STITLE       => 'Client Interventions Performed',
                                SADDNEW      => 'view=ClientInterventionsPerformedInp.cgi',
                                Bedit        => 'view=ClientInterventionsPerformedInp.cgi',
                                SUBLIST      => []
                              },
ListClientRiskAssessment => { SSELECT      => qq|select ClientRiskAssessment.*, DATE_FORMAT(ClientRiskAssessment.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientRiskAssessment.VisitDate,'%m/%d/%Y') as VisitDate, xRiskAssessment.ConceptName as AssessDescr, xRiskAssessmentResult.ConceptName as ResultDescr, xRiskAssessmentRejected.ConceptName as RejectedDescr from ClientRiskAssessment left join okmis_config.xRiskAssessment on xRiskAssessment.ID=ClientRiskAssessment.Assessment left join okmis_config.xRiskAssessmentRejected on xRiskAssessmentRejected.ID=ClientRiskAssessment.Rejected left join okmis_config.xRiskAssessmentResult on xRiskAssessmentResult.ID=ClientRiskAssessment.Result where ClientRiskAssessment.ClientID='_MAINSELECTID_' order by ClientRiskAssessment.VisitDate desc |,
                                SHEADER      => ['VisitDate:center::Assessment Date:date','AssessDescr:center::Assessment','ResultDescr:center::Result','RejectedDescr:center::Rejected','edit:center:BE:none'],
                                STABLE       => 'ClientRiskAssessment',
                                STITLE       => 'Client Risk Assessment',
                                SADDNEW      => 'view=ClientRiskAssessmentInp.cgi',
                                Bedit        => 'view=ClientRiskAssessmentInp.cgi',
                                SUBLIST      => []
                              },
         ListClientLegalPP => { SSELECT      => qq|select ClientLegalPP.*, DATE_FORMAT(ClientLegalPP.CreateDate,'%m/%d/%Y') as CreateDate, xCustAgency.Descr as CustodyAgency from ClientLegalPP left join okmis_config.xCustAgency on xCustAgency.ID=ClientLegalPP.CustAgency where ClientLegalPP.ClientID='_MAINSELECTID_' order by ClientLegalPP.CreateDate desc |,
                                SHEADER      => ['Name:left::Name of Worker','Addr:left','City:left','ST:center','Zip:center','WkPh:left','Cell:left','CustodyAgency:center::Custody Agency','Guardian:centerflag::G','EmerContact:centerflag::E','edit:center:BE:none'],
                                STABLE       => 'ClientLegalPP',
                                STITLE       => 'Client Probation and Parole Workers',
                                SADDNEW      => 'view=ClientLegalPPInp.cgi',
                                Bedit        => 'view=ClientLegalPPInp.cgi',
                                SUBLIST      => []
                              },
         ListClientLegalHx => { SSELECT      => qq|select ClientLegalHx.*, DATE_FORMAT(ClientLegalHx.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientLegalHx.Date,'%m/%d/%Y') as InDate, xLegalType.Descr as LegalType, xLegalCharge.Descr as LegalCharge, xLegalOutCome.Descr as LegalOutCome from ClientLegalHx left join okmis_config.xLegalType on xLegalType.ID=ClientLegalHx.Type left join okmis_config.xLegalCharge on xLegalCharge.ID=ClientLegalHx.Charge left join okmis_config.xLegalOutCome on xLegalOutCome.ID=ClientLegalHx.OutCome where ClientLegalHx.ClientID='_MAINSELECTID_' order by ClientLegalHx.Date desc |,
                                SHEADER      => ['InDate:center','City:left','ST:center','LegalType:center','LegalCharge:center','LegalOutCome:center','edit:center:BE:none'],
                                STABLE       => 'ClientLegalHx',
                                STITLE       => 'Client Probation and Parole Offenses (Start with most recent)',
                                SADDNEW      => 'view=ClientLegalHxInp.cgi',
                                Bedit        => 'view=ClientLegalHxInp.cgi',
                                SUBLIST      => []
                              },
   ListProviderContracts   => { SSELECT      => qq|select Contracts.*, xInsurance.Name as InsuranceName, xInsurance.Descr,xInsurance.PayID, xInsurance.PayID, xInsurance.ClearingHouse, xInsurance.ClearingHouseRemit, xInsurance.Help as Help from Contracts left join xInsurance on xInsurance.ID=Contracts.InsID where Contracts.ProvID='_MAINSELECTID_' order by xInsurance.Name|,
                                SHEADER      => ['InsuranceName:left:FM:Insurance Name','PayID:left','PIN:left','TaxID:left','ContractCode:center::Code','SourceCode:center::Source','BillFlag:centerflag::Bill','BillType:center','Help:center:BD:Help','edit:center:BE:none'],
                                STABLE       => 'Contracts',
                                STITLE       => 'Clinic Contracts',
                                FInsuranceName => 'DBA->listContractValues(%form+%record)',
                                SADDNEW      => 'view=ProviderContractsInp.cgi',
                                Bedit        => 'view=ProviderContractsInp.cgi',
                                SUBLIST      => []
                              },
   ListProviderLicenses => { SSELECT      => qq|select ProviderLicenses.*, DATE_FORMAT(ProviderLicenses.LicEffDate,'%m/%d/%Y') as LicenseEffective, DATE_FORMAT(ProviderLicenses.LicExpDate,'%m/%d/%Y') as LicenseExpires, xLicenseTypes.Descr as LicenseType from ProviderLicenses left join okmis_config.xLicenseTypes on xLicenseTypes.ID=ProviderLicenses.LicType where ProviderLicenses.ProvID='_MAINSELECTID_' order by ProviderLicenses.State,ProviderLicenses.LicType|,
                                SHEADER      => ['State:center','LicenseType:left','LicNumber:left','LicenseEffective:center:::date','LicenseExpires:center:::date','DEA:left','edit:center:BE:none'],
                                STABLE       => 'ProviderLicenses',
                                STITLE       => 'Professional Licenses',
                                SADDNEW      => 'view=ProviderLicenses.cgi',
                                Bedit        => 'view=ProviderLicenses.cgi',
                                SUBLIST      => []
                              },
   ListProviderCredentials => { SSELECT      => qq|select Credentials.*, DATE_FORMAT(Credentials.RecDOLC,'%m/%d/%Y') as CreateDate, xInsurance.Name as InsName, xCredentials.Descr as Cred, xSCRestrictions.Descr as Rest from Credentials left join xInsurance on xInsurance.ID=Credentials.InsID left join okmis_config.xCredentials on xCredentials.ID=Credentials.CredID left join okmis_config.xSCRestrictions on xSCRestrictions.ID=Credentials.Restriction where Credentials.ProvID='_MAINSELECTID_' order by xInsurance.Name,Credentials.Rank|,
                                SHEADER      => ['InsName:left::Insurance Name','Cred:left::Credential','Rank:center','Rest:center::Restriction','PIN:center','RefID:center::PINQ','Taxonomy:center','edit:center:BE:none'],
                                STABLE       => 'Credentials',
                                STITLE       => 'Provider Credentials',
                                SADDNEW      => 'view=Credentials.cgi',
                                Bedit        => 'view=Credentials.cgi',
                                SUBLIST      => []
                              },
   ListAgencyInsurance     => { SSELECT      => qq|select ProviderIns.*, DATE_FORMAT(ProviderIns.CreateDate,'%m/%d/%Y') as CreateDate from ProviderIns where ProviderIns.ProvID='_MAINSELECTID_' order by ProviderIns.Descr,ProviderIns.Type|,
                                SHEADER      => ['Descr:left::Description','Type:left','Premium:right','BaseCost:right','Active:centerflag','edit:center:BE:none'],
                                STABLE       => 'ProviderIns',
                                STITLE       => 'Agency Insurance Rates',
                                SADDNEW      => 'view=ProviderIns.cgi',
                                Bedit        => 'view=ProviderIns.cgi',
                                SUBLIST      => []
                              },
      ListProviderReminders=> { SSELECT      => qq|select Reminders.*, DATE_FORMAT(Reminders.RDate,'%m/%d/%Y') as ForDate from Reminders where Reminders.ProvID='_MAINSELECTID_' order by Reminders.RDate|,
                                SHEADER      => ['Message:left','ForDate:center','RTime:center::ForTime','Freq:center::Frequency','Done:center','edit:center:BE:none'],
                                STABLE       => 'Reminders',
                                STITLE       => 'Reminders Listing',
                                SADDNEW      => 'view=Reminders.cgi',
                                Bedit        => 'view=Reminders.cgi',
                                SUBLIST      => []
                              },
      ListProviderEquipment=> { SSELECT      => qq|select Equipment.*, DATE_FORMAT(Equipment.OutDate,'%m/%d/%Y') as OutDate, DATE_FORMAT(Equipment.InDate,'%m/%d/%Y') as InDate from Equipment where Equipment.ProvID='_MAINSELECTID_' order by Equipment.OutDate, Equipment.InDate|,
                                SHEADER      => ['Descr:left::Description','Model:center','Serial:center','OutDate:center','InDate:center','edit:center:BE:none'],
                                STABLE       => 'Equipment',
                                STITLE       => 'Equipment Listing',
                                SADDNEW      => 'view=Equipment.cgi',
                                Bedit        => 'view=Equipment.cgi',
                                SUBLIST      => []
                              },
      ListProviderPay      => { SSELECT      => qq|select ProviderPay.*, DATE_FORMAT(ProviderPay.EffDate,'%m/%d/%Y') as EffectiveDate, DATE_FORMAT(ProviderPay.ExpDate,'%m/%d/%Y') as ExpireDate, xSC.SCName as ServiceName, xSC.SCNum as ServiceCode, xInsurance.Name as InsuranceName from ProviderPay left join xSC on xSC.SCID=ProviderPay.SCID left join xInsurance on xInsurance.ID=xSC.InsID where ProviderPay.ProvID='_MAINSELECTID_' order by ProviderPay.ExpDate, xInsurance.Name, xSC.SCName, xSC.SCNum|,
                                SHEADER      => ['Rate:center','Type:center','Commission:center','InsuranceName:center','ServiceName:center','ServiceCode:center','isMgr:center','EffectiveDate:center','ExpireDate:center','edit:center:BE:none'],
                                STABLE       => 'ProviderPay',
                                STITLE       => 'Provider Pay Listing',
                                SADDNEW      => 'view=ProviderPay.cgi',
                                Bedit        => 'view=ProviderPay.cgi',
                                SUBLIST      => []
                              },
      ListProviderJobs => { SSELECT      => qq|select ProviderJobs.*, DATE_FORMAT(ProviderJobs.CreateDate,'%m/%d/%Y') as CreateDate, xMonths.Title as CronMonth, xDaysOfWeek.Title as CronWeek, xCronJobs.Title as Command from ProviderJobs left join okmis_config.xMonths on xMonths.ID=ProviderJobs.CronMonth left join okmis_config.xDaysOfWeek on xDaysOfWeek.ID=ProviderJobs.CronWeek left join okmis_config.xCronJobs on xCronJobs.ID=ProviderJobs.Command where ProviderJobs.ProvID='_MAINSELECTID_' order by ProviderJobs.CreateDate|,
                                SHEADER      => ['Folder:left::Folder:default','FromDate:left::FromDate:default','ToDate:left::ToDate:default','CronTime:left::Time','CronDay:left::Day','CronMonth:center::Month','CronWeek:center::Week','CreateDate:center:::default','Command:left::Command','edit:center:BE:none'],
                                STABLE       => 'ProviderJobs',
                                STITLE       => 'ProviderJobs Listing',
                                SADDNEW      => 'view=ProviderJobsInp.cgi',
                                Bedit        => 'view=ProviderJobsInp.cgi',
                                SUBLIST      => []
                              },
      ListProviderTraining => { SSELECT      => qq|select Training.*, DATE_FORMAT(Training.Date,'%m/%d/%Y') as TrainingDate from Training where Training.ProvID='_MAINSELECTID_' order by Training.Date|,
                                SHEADER      => ['Descr:left::Description:default','TrainingDate:center:::default','edit:center:BE:none'],
                                STABLE       => 'Training',
                                STITLE       => 'Training Listing',
                                SADDNEW      => 'view=Training.cgi',
                                Bedit        => 'view=Training.cgi',
                                SUBLIST      => []
                              },
      ListProviderTimesheet => { SSELECT      => qq|select Timesheet.*, DATE_FORMAT(Timesheet.CreateDate,'%m/%d/%Y') as CreateDate from Timesheet  where Timesheet.ProvID='_MAINSELECTID_' order by Timesheet.LoginTime|,
                                SHEADER      => ['LoginTime:center','InIP:center','LogoutTime:center','OutIP:center','edit:center:BE:none'],
                                STABLE       => 'Timesheet',
                                STITLE       => 'Timesheet Listing',
                                SADDNEW      => 'view=ProviderTimesheet.cgi',
                                Bedit        => 'view=ProviderTimesheet.cgi',
                                SUBLIST      => []
                              },
       ListClientSA        => { SSELECT        => qq|select SAbuse.*, DATE_FORMAT(SAbuse.FromDate,'%m/%d/%Y') as FromDate, DATE_FORMAT(SAbuse.ToDate,'%m/%d/%Y') as ToDate, xDrugs.Descr as Drug, xMethods.Descr as Method, xFreqs.Descr as Frequency from SAbuse left join okmis_config.xDrugs on xDrugs.ID=SAbuse.Drug left join okmis_config.xMethods on xMethods.ID=SAbuse.Method left join okmis_config.xFreqs on xFreqs.ID=SAbuse.Freq where SAbuse.ClientID='_MAINSELECTID_' order by SAbuse.Priority,xDrugs.Descr |,
                                SHEADER        => ['Priority:center','Drug:left','FromDate:center','ToDate:center','Method:center','Amount:left','Frequency:center','Age:center','edit:center:BE:none'],
                                STABLE         => 'SAbuse',
                                STITLE         => 'Client Substance Abuse',
                                SADDNEW        => 'view=ClientSAInp.cgi',
                                Bedit          => 'view=ClientSAInp.cgi',
                                SUBLIST        => []
                              },
      ListClientAdmits     => { SSELECT      => qq|select ClientAdmit.*, DATE_FORMAT(ClientAdmit.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientAdmit.AdmitDate,'%m/%d/%Y') as AdmitDate, Provider.LName as Staff, Provider.FName as FirstName from ClientAdmit left join Provider on Provider.ProvID=ClientAdmit.ProvID where ClientAdmit.ClientID='_MAINSELECTID_' order by ClientAdmit.AdmitDate desc |,
                                SHEADER      => ['AdmitDate:center:FS::date','AdmitTime:center','Staff:left','FirstName:left','TrID:center'],
                                STABLE       => 'ClientAdmit',
                                STITLE       => 'Client Intake/Admissions',
                                FAdmitDate   => 'DBA->setPrintClientIntake(%form++_FLDID_)',
                                SUBLIST      => []
                              },
      ListClientASI     =>    { SSELECT      => qq|select ClientASI.*, DATE_FORMAT(ClientASI.CreateDate,'%m/%d/%Y') as CreateDate, Provider.LName as Provider, Provider.FName as FirstName from ClientASI left join Provider on Provider.ProvID=ClientASI.G11 where ClientASI.G1='_MAINSELECTID_' order by ClientASI.G5|,
                                SHEADER      => ['print:center:BP','G5:center','G6:center','G7:center','G8:center','G9:center','CreateDate:center','Provider:left','FirstName:left','edit:center:BE:none'],
                                STABLE       => 'ClientASI',
                                STITLE       => 'Client ASI',
                                SADDNEW      => 'view=ClientASIInp.cgi',
                                Bprint       => 'printClientASI::Click to print ASI',
                                Bedit        => 'view=ClientASIInp.cgi',
                                SUBLIST      => []
                              },
      ListClientTASI     =>   { SSELECT      => qq|select ClientTASI.*, DATE_FORMAT(ClientTASI.AdmDate,'%m/%d/%Y') as AdmDate, DATE_FORMAT(ClientTASI.IntDate,'%m/%d/%Y') as IntDate, Provider.LName as Provider, Provider.FName as FirstName from ClientTASI left join Provider on Provider.ProvID=ClientTASI.StaffID where ClientTASI.ClientID='_MAINSELECTID_' order by ClientTASI.AdmDate|,
                                SHEADER      => ['print:center:BP','Name:left','AdmDate:center','IntDate:center','Provider:left','FirstName:left','Status:center','edit:center:BE:none'],
                                STABLE       => 'ClientTASI',
                                STITLE       => 'Client TASI',
                                SADDNEW      => 'view=ClientTASIInp.cgi',
                                Bprint       => 'printClientTASI::Click to print TASI',
                                Bedit        => 'view=ClientTASIInp.cgi',
                                SUBLIST      => []
                              },
      ListClientReview     =>   { SSELECT      => qq|select ClientReview.*, DATE_FORMAT(ClientReview.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(ClientReview.RevDate,'%m/%d/%Y') as RevDate from ClientReview where ClientReview.ClientID='_MAINSELECTID_' order by ClientReview.CreateDate desc|,
                                SHEADER      => ['CreateDate:center:::date','RevDate:center:::date','ClientInfoNeeded:centerflag::Info<BR>Needed','ConsentNeeded:centerflag::Consent<BR>Needed','InitialIntakeNeeded:centerflag::Initial<BR>Needed','TrPlanNeeded:centerflag::TP<BR>Needed','ProgressNotesNeeded:centerflag::Notes<BR>Needed','DischargeSummaryNeeded:centerflag::Discharge<BR>Needed','edit:center:BE:none'],
                                STABLE       => 'ClientReview',
                                STITLE       => 'Client Review',
                                SADDNEW      => 'view=ClientReview.cgi',
                                Bedit        => 'view=ClientReview.cgi',
                                SUBLIST      => []
                              },
      ListClientInvoices =>   { SSELECT      => qq|select Invoices.*, DATE_FORMAT(Invoices.CreateDate,'%m/%d/%Y') as CreateDate, DATE_FORMAT(Invoices.InvDate,'%m/%d/%Y') as InvDate from Invoices where Invoices.ClientID='_MAINSELECTID_' order by Invoices.CreateDate desc|,
                                SHEADER      => ['ID:center:BP','InvDate:center:::date','TotalAmt:center'],
                                STABLE       => 'Invoices',
                                STITLE       => 'Client Invoices',
                                BID          => 'printInvoice::Click to print Invoice',
                                SUBLIST      => []
                              },
      ListClientCARSReview     =>   { SSELECT      => qq|select ClientCARSReview.*, DATE_FORMAT(ClientCARSReview.CreateDate,'%m/%d/%Y') as CreateDate, Provider.LName as Provider, Provider.FName as FirstName from ClientCARSReview left join Provider on Provider.ProvID=ClientCARSReview.CreateProvID where ClientCARSReview.ClientID='_MAINSELECTID_' order by ClientCARSReview.Month|,
                                SHEADER      => ['ID:center:BP:print ID','Provider:left::Created By','FirstName:left','CreateDate:center:::date','Month:center::For Month:default','edit:center:BE:none'],
                                STABLE       => 'ClientCARSReview',
                                STITLE       => 'Client CARSReview',
                                SADDNEW      => 'view=ClientCARSReviewInp.cgi',
                                BID          => 'PrintClientCARSReview::Click to print ClientCARSReview',
                                Bedit        => 'view=ClientCARSReviewInp.cgi',
                                SUBLIST      => []
                              },
      ListClientSOGS     =>   { SSELECT      => qq|select SOGS.*, DATE_FORMAT(SOGS.CreateDate,'%m/%d/%Y') as CreateDate, Provider.LName as Provider, Provider.FName as FirstName from SOGS left join Provider on Provider.ProvID=SOGS.ProvID where SOGS.ClientID='_MAINSELECTID_' order by SOGS.TransDate,SOGS.TransType|,
                                SHEADER      => ['ID:center:BP:print ID','TransDate:center:::date','TotalScore:center','TransType:center','CreateDate:center:::date','Provider:left','FirstName:left','edit:center:BE:none'],
                                STABLE       => 'SOGS',
                                STITLE       => 'Client SOGS',
                                SADDNEW      => 'view=SOGS.cgi',
                                BID          => 'printSOGS::Click to print SOGS',
                                Bedit        => 'view=SOGS.cgi',
                                SUBLIST      => []
                              },
      ListClientSOGSGSI     =>   { SSELECT      => qq|select SOGSGSI.*, DATE_FORMAT(SOGSGSI.CreateDate,'%m/%d/%Y') as CreateDate, Provider.LName as Provider, Provider.FName as FirstName from SOGSGSI left join Provider on Provider.ProvID=SOGSGSI.ProvID where SOGSGSI.ClientID='_MAINSELECTID_' order by SOGSGSI.TransDate,SOGSGSI.TransType|,
                                SHEADER      => ['ID:center:BP:print ID','TransDate:center:::date','TransType:center','CreateDate:center:::date','Provider:left','FirstName:left','edit:center:BE:none'],
                                STABLE       => 'SOGSGSI',
                                STITLE       => 'Client SOGSGSI',
                                SADDNEW      => 'view=SOGSGSI.cgi',
                                BID          => 'PrintSOGSGSI::Click to print SOGSGSI',
                                Bedit        => 'view=SOGSGSI.cgi',
                                SUBLIST      => []
                              },
  ListClientOpioidRegistry => { SSELECT      => qq|select ClientOpioidRegistry.*, DATE_FORMAT(ClientOpioidRegistry.CreateDate,'%m/%d/%Y') as CreateDate from ClientOpioidRegistry where ClientOpioidRegistry.ClientID='_MAINSELECTID_' order by ClientOpioidRegistry.CreateDate|,
                                SHEADER      => ['CreateDate:center:::date','Title:center:::default','Descr:left::Description:default','Path:center:BD:display','edit:center:BE:none'],
                                STABLE       => 'ClientOpioidRegistry',
                                STITLE       => 'Client Opioid Registry',
                                SADDNEW      => 'view=ClientOpioidRegistryUpload.cgi',
                                Bedit        => 'view=ClientOpioidRegistryInp.cgi',
                                SUBLIST      => []
                              }
);
